<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram>
            <Box name="Fear" id="21" localization="8" tooltip="ID : #02C 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Fear" x="400" y="131">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="100">
                <BehaviorLayer name="behavior_layer2">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="IntroduceHimself" id="4" localization="8" tooltip="" x="344" y="139">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Oui, j'en ai peur !"
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="Wait (1)" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="513" y="134">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                    <Key frame="5" value="6.41369" />
                    <Key frame="20" value="6.85315" />
                    <Key frame="25" value="-26.1062" />
                    <Key frame="33" value="-26.1062" />
                    <Key frame="38" value="-11.9557" />
                    <Key frame="48" value="-11.9557" />
                    <Key frame="52" value="7.90785" />
                    <Key frame="66" value="7.90785" />
                    <Key frame="70" value="-26.1062" />
                    <Key frame="78" value="-26.1062" />
                    <Key frame="83" value="-0.00240423" />
                    <Key frame="100" value="0.349163" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                    <Key frame="5" value="-30.8524" />
                    <Key frame="20" value="-31.3797" />
                    <Key frame="25" value="-29.7098" />
                    <Key frame="33" value="-29.7098" />
                    <Key frame="38" value="-37.6201" />
                    <Key frame="48" value="-37.6201" />
                    <Key frame="52" value="-31.2919" />
                    <Key frame="66" value="-31.2919" />
                    <Key frame="70" value="-29.7098" />
                    <Key frame="78" value="-29.7098" />
                    <Key frame="83" value="-31.0282" />
                    <Key frame="100" value="-12.1315" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                    <Key frame="4" value="102.04" />
                    <Key frame="75" value="99.1395" />
                    <Key frame="96" value="96.239" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                    <Key frame="4" value="8.4352" />
                    <Key frame="75" value="9.31412" />
                    <Key frame="96" value="18.0154" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                    <Key frame="4" value="-115.844" />
                    <Key frame="75" value="-119.535" />
                    <Key frame="96" value="-68.2064" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                    <Key frame="4" value="-31.4628" />
                    <Key frame="75" value="-26.2772" />
                    <Key frame="96" value="-30.496" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                    <Key frame="9" value="-1.93602" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                    <Key frame="9" value="0.341458" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                    <Key frame="4" value="98.2654" />
                    <Key frame="75" value="97.2985" />
                    <Key frame="96" value="98.4411" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                    <Key frame="4" value="-16.9655" />
                    <Key frame="75" value="-13.2741" />
                    <Key frame="96" value="-10.9889" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                    <Key frame="4" value="103.798" />
                    <Key frame="75" value="111.884" />
                    <Key frame="96" value="95.2722" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                    <Key frame="4" value="29.8856" />
                    <Key frame="75" value="29.8856" />
                    <Key frame="96" value="31.5555" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                    <Key frame="9" value="0.349163" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                    <Key frame="9" value="0.0192993" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                    <Key frame="6" value="-10.193" />
                    <Key frame="12" value="-10.193" />
                    <Key frame="77" value="-8.69888" />
                    <Key frame="98" value="-31.2871" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                    <Key frame="6" value="1.84813" />
                    <Key frame="12" value="2.11181" />
                    <Key frame="77" value="1.145" />
                    <Key frame="98" value="10.1978" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                    <Key frame="6" value="-22.3221" />
                    <Key frame="12" value="-22.2342" />
                    <Key frame="77" value="-16.8728" />
                    <Key frame="98" value="21.2722" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                    <Key frame="6" value="44.2071" />
                    <Key frame="12" value="44.295" />
                    <Key frame="77" value="62.5765" />
                    <Key frame="98" value="-2.90283" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                    <Key frame="6" value="-17.4929" />
                    <Key frame="12" value="-17.4929" />
                    <Key frame="77" value="-36.1259" />
                    <Key frame="98" value="6.67737" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                    <Key frame="6" value="-2.107" />
                    <Key frame="12" value="-2.107" />
                    <Key frame="77" value="-0.437054" />
                    <Key frame="98" value="-5.2711" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                    <Key frame="6" value="-0.261271" />
                    <Key frame="12" value="-0.437054" />
                    <Key frame="77" value="0.266079" />
                    <Key frame="98" value="-11.6872" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                    <Key frame="6" value="-23.4695" />
                    <Key frame="12" value="-23.3816" />
                    <Key frame="77" value="-16.4382" />
                    <Key frame="98" value="20.74" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                    <Key frame="6" value="43.4209" />
                    <Key frame="12" value="43.333" />
                    <Key frame="77" value="62.2297" />
                    <Key frame="98" value="0.617646" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                    <Key frame="6" value="-15.906" />
                    <Key frame="12" value="-15.906" />
                    <Key frame="77" value="-36.5606" />
                    <Key frame="98" value="4.22121" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                    <Key frame="6" value="0.881321" />
                    <Key frame="12" value="0.881321" />
                    <Key frame="77" value="-0.788621" />
                    <Key frame="98" value="5.97904" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
              <Resource name="Standing" type="Lock" timeout="1" />
              <Resource name="All motors" type="Lock" timeout="1" />
              <Resource name="Left eye leds" type="Lock" timeout="1" />
              <Resource name="Right eye leds" type="Lock" timeout="1" />
            </Box>
            <Link inputowner="21" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="0" indexofinput="4" outputowner="21" indexofoutput="4" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
