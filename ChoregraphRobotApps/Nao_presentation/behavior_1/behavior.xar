<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram scale="50">
            <Box name="discover" id="1" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1155" y="0">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="15" start_frame="1" end_frame="300" size="300">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="SayingDiscovery" id="1" localization="8" tooltip="" x="504" y="152">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Après cette zone nous vous emmènerons à découvrir les eaux peu profondes, le lagon, la plage, la mangrove, les habitats terrestres puis retour à la mer pour une immersion totale. Je suis sûr que vous l'apprécierez"
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="Wait" id="2" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="787" y="157">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="20" value="16.2" />
                    <Key frame="40" value="-24.5921" />
                    <Key frame="100" value="16.2" />
                    <Key frame="120" value="-10.1" />
                    <Key frame="140" value="-18.2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="20" value="-16.4" />
                    <Key frame="40" value="28.8231" />
                    <Key frame="60" value="-17.6" />
                    <Key frame="100" value="-16.4" />
                    <Key frame="120" value="-0.3" />
                    <Key frame="140" value="-0.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="-24.0963" />
                    <Key frame="100" value="-24.0963" />
                    <Key frame="120" value="-24.0963" />
                    <Key frame="140" value="-79" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="-69.0549" />
                    <Key frame="100" value="-69.0549" />
                    <Key frame="120" value="-69.0549" />
                    <Key frame="140" value="-46.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="81.9502" />
                    <Key frame="100" value="81.9502" />
                    <Key frame="120" value="81.9502" />
                    <Key frame="140" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="14.2802" />
                    <Key frame="100" value="14.2802" />
                    <Key frame="120" value="14.2802" />
                    <Key frame="140" value="22.6" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="53.2" />
                    <Key frame="40" value="55.7" />
                    <Key frame="60" value="0.5" />
                    <Key frame="80" value="55.7" />
                    <Key frame="100" value="53.2" />
                    <Key frame="120" value="46.7" />
                    <Key frame="140" value="88.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="19.3" />
                    <Key frame="40" value="49.4" />
                    <Key frame="60" value="39.4" />
                    <Key frame="80" value="49.4" />
                    <Key frame="100" value="19.3" />
                    <Key frame="120" value="9.3" />
                    <Key frame="140" value="45.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="59.4" />
                    <Key frame="40" value="-12.2" />
                    <Key frame="60" value="-66.5" />
                    <Key frame="80" value="-12.2" />
                    <Key frame="100" value="59.4" />
                    <Key frame="120" value="82.3" />
                    <Key frame="140" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="-14.2802" />
                    <Key frame="100" value="-14.2802" />
                    <Key frame="120" value="-14.2802" />
                    <Key frame="140" value="-26.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="140" value="4.61659" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="140" value="-5.97129" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="140" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="140" value="6.78287" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="140" value="6.71762" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="140" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="140" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="140" value="8.12719" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="140" value="4.61658" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="140" value="5.97106" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="140" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="140" value="6.78289" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="140" value="-6.71728" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="140" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="140" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="140" value="-8.51448" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="Time" id="2" localization="8" tooltip="" x="142" y="1289">
              <bitmap>media/images/box/box-python-script.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=5*1000)  # 5 seconds delay

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Box name="dont touch" id="3" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1571" y="0">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="20" start_frame="1" end_frame="300" size="300">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="100">
                      <Box name="SayingDiscovery" id="1" localization="8" tooltip="" x="654" y="174">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Vous ne devez pas tapper sur les vitres les especes de cette aquaarium sont fragile il faut les preserver !"
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="LegsV2" id="2" localization="8" tooltip="" x="655" y="40">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="20" start_frame="1" end_frame="-1" size="100">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="10" value="4.9" />
                              <Key frame="100" value="4.90817" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="10" value="-5.35316" />
                              <Key frame="100" value="-6.13028" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="10" value="-22" />
                              <Key frame="100" value="7.16779" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="10" value="4.59747" />
                              <Key frame="100" value="7.27906" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="10" value="-16.2" />
                              <Key frame="100" value="-10.0384" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="10" value="17.6" />
                              <Key frame="100" value="-5.16244" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="10" value="4.9" />
                              <Key frame="100" value="5.48845" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="10" value="6.15042" />
                              <Key frame="100" value="6.13005" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="10" value="-22" />
                              <Key frame="100" value="7.1678" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="10" value="-6.56345" />
                              <Key frame="100" value="-7.27878" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="10" value="-16.2" />
                              <Key frame="100" value="-10.0384" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="10" value="17.6" />
                              <Key frame="100" value="-5.16244" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="20" value="5.50736" />
                    <Key frame="130" value="5.8" />
                    <Key frame="153" value="-9.74028" />
                    <Key frame="165" value="-9.74028" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="20" value="0.521657" />
                    <Key frame="130" value="0.8" />
                    <Key frame="153" value="0" />
                    <Key frame="165" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="-81.4" />
                    <Key frame="30" value="-63.7" />
                    <Key frame="50" value="-62.1" />
                    <Key frame="60" value="-62.1" />
                    <Key frame="70" value="-81.4" />
                    <Key frame="80" value="-81.4" />
                    <Key frame="110" value="-81.4" />
                    <Key frame="120" value="-81.4" />
                    <Key frame="130" value="-79" />
                    <Key frame="153" value="-79" />
                    <Key frame="165" value="-79" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="-62.2" />
                    <Key frame="30" value="-17.1" />
                    <Key frame="50" value="-84.6" />
                    <Key frame="60" value="-84.6" />
                    <Key frame="70" value="-62.2" />
                    <Key frame="80" value="-62.2" />
                    <Key frame="110" value="-62.2" />
                    <Key frame="120" value="-62.2" />
                    <Key frame="130" value="-46.8" />
                    <Key frame="153" value="-46.8" />
                    <Key frame="165" value="-46.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="20" value="0.07" />
                    <Key frame="50" value="0" />
                    <Key frame="60" value="0" />
                    <Key frame="70" value="0.07" />
                    <Key frame="80" value="0.07" />
                    <Key frame="110" value="0.07" />
                    <Key frame="120" value="0.07" />
                    <Key frame="130" value="0.2998" />
                    <Key frame="153" value="0.2998" />
                    <Key frame="165" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="-14.5" />
                    <Key frame="30" value="-33.4" />
                    <Key frame="40" value="-7.5" />
                    <Key frame="50" value="79.1" />
                    <Key frame="60" value="-48.4" />
                    <Key frame="70" value="-14.5" />
                    <Key frame="80" value="-14.5" />
                    <Key frame="110" value="-14.5" />
                    <Key frame="120" value="-14.5" />
                    <Key frame="130" value="119.5" />
                    <Key frame="153" value="119.5" />
                    <Key frame="165" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="-11.1" />
                    <Key frame="30" value="40" />
                    <Key frame="40" value="37.7" />
                    <Key frame="50" value="-0.8" />
                    <Key frame="60" value="-0.8" />
                    <Key frame="70" value="-11.1" />
                    <Key frame="80" value="-11.1" />
                    <Key frame="110" value="-11.1" />
                    <Key frame="120" value="-11.1" />
                    <Key frame="130" value="22.6" />
                    <Key frame="153" value="22.6" />
                    <Key frame="165" value="22.6" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="20" value="5.92196" />
                    <Key frame="30" value="7.6" />
                    <Key frame="50" value="-75.6" />
                    <Key frame="60" value="-75.6" />
                    <Key frame="70" value="5.92196" />
                    <Key frame="80" value="5.92196" />
                    <Key frame="110" value="5.92196" />
                    <Key frame="120" value="5.92196" />
                    <Key frame="130" value="8.12719" />
                    <Key frame="153" value="8.12719" />
                    <Key frame="165" value="8.12719" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="81.4" />
                    <Key frame="70" value="81.4" />
                    <Key frame="80" value="81.4" />
                    <Key frame="90" value="88.5" />
                    <Key frame="100" value="10.7" />
                    <Key frame="110" value="81.4" />
                    <Key frame="120" value="81.4" />
                    <Key frame="130" value="88.5" />
                    <Key frame="153" value="88.5" />
                    <Key frame="165" value="88.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="62.2" />
                    <Key frame="70" value="62.2" />
                    <Key frame="80" value="62.2" />
                    <Key frame="90" value="57.4" />
                    <Key frame="100" value="-4.2" />
                    <Key frame="110" value="62.2" />
                    <Key frame="120" value="62.2" />
                    <Key frame="130" value="45.5" />
                    <Key frame="153" value="45.5" />
                    <Key frame="165" value="45.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="20" value="0.07" />
                    <Key frame="70" value="0.07" />
                    <Key frame="80" value="0.07" />
                    <Key frame="110" value="0.07" />
                    <Key frame="120" value="0.07" />
                    <Key frame="130" value="0.2998" />
                    <Key frame="153" value="0.2998" />
                    <Key frame="165" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="-14.5" />
                    <Key frame="70" value="-14.5" />
                    <Key frame="80" value="-14.5" />
                    <Key frame="90" value="17.9" />
                    <Key frame="100" value="-7.6" />
                    <Key frame="110" value="-14.5" />
                    <Key frame="120" value="-14.5" />
                    <Key frame="130" value="119.5" />
                    <Key frame="153" value="119.5" />
                    <Key frame="165" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="11.1" />
                    <Key frame="70" value="11.1" />
                    <Key frame="80" value="11.1" />
                    <Key frame="90" value="-18.4" />
                    <Key frame="100" value="0.9" />
                    <Key frame="110" value="11.1" />
                    <Key frame="120" value="11.1" />
                    <Key frame="130" value="-26.8" />
                    <Key frame="153" value="-26.8" />
                    <Key frame="165" value="-26.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="20" value="30.5" />
                    <Key frame="70" value="30.5" />
                    <Key frame="80" value="30.5" />
                    <Key frame="110" value="30.5" />
                    <Key frame="120" value="30.5" />
                    <Key frame="130" value="-8.51448" />
                    <Key frame="153" value="-8.51448" />
                    <Key frame="165" value="-8.51448" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="supermen position" id="6" localization="8" tooltip="" x="377" y="0">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="20" start_frame="1" end_frame="299" size="299">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="phrase" index="1">
                    <Diagram>
                      <Box name="Welcom" id="5" localization="8" tooltip="" x="691" y="55">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Bienvenue à Odysseo, ce magnifique lieu où vous allez découvrir le monde marin de l’ile Maurice, et de l’Océan Indien."
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="Wait" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="974" y="62">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="60" value="-9.61289" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="60" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="60" value="4.62119" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="60" value="-5.89714" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="60" value="-88.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="60" value="10.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="60" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="60" value="8.23021" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="60" value="6.02407" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="60" value="-9.74" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="60" value="-5.22081" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="60" value="83.1366" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="60" value="31.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="60" value="-9.9" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="60" value="5.01" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="60" value="6.28682" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="60" value="5.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="60" value="-19.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="60" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="60" value="7.71664" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="60" value="-6.51626" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="60" value="-9.74" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="60" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="60" value="-83.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="60" value="2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="60" value="6.61284" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="OdysseoInfo" id="8" localization="8" tooltip="" x="631" y="0">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="15" start_frame="1" end_frame="300" size="300">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="phrase" index="1">
                    <Diagram>
                      <Box name="IntroduceOdysseo" id="5" localization="8" tooltip="" x="514" y="70">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Nous avons 45 bassins de tailles différentes, 200 espèces et 3500 animaux. La capacité totale d’Odysseo est de 2 millions litres d’eau."
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="Animated Say" id="2" localization="8" tooltip="Say some text with animations. The text can be localized." x="525" y="225">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="Nous avons 45 bassins de tailles différentes, 200 espèces et 3500 animaux. La capacité totale d’Odysseo est de 2 millions litres d’eau." default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Wait" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="816" y="49">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="90" value="-9.61289" />
                    <Key frame="100" value="-9.61289" />
                    <Key frame="110" value="-9.61289" />
                    <Key frame="140" value="-17.9" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="90" value="0" />
                    <Key frame="100" value="0" />
                    <Key frame="110" value="0" />
                    <Key frame="140" value="-4.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="80" value="4.62119" />
                    <Key frame="90" value="4.62119" />
                    <Key frame="100" value="4.62119" />
                    <Key frame="110" value="4.62119" />
                    <Key frame="140" value="4.61659" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="80" value="-5.85221" />
                    <Key frame="90" value="-5.85221" />
                    <Key frame="100" value="-5.85221" />
                    <Key frame="110" value="-5.85221" />
                    <Key frame="140" value="-5.97129" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="80" value="-88.5" />
                    <Key frame="90" value="-72.4" />
                    <Key frame="100" value="-88.5" />
                    <Key frame="110" value="-72.4" />
                    <Key frame="140" value="-79" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="80" value="-64.1" />
                    <Key frame="90" value="-64.1" />
                    <Key frame="100" value="-64.1" />
                    <Key frame="110" value="-64.1" />
                    <Key frame="140" value="-46.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="80" value="0.42" />
                    <Key frame="90" value="1" />
                    <Key frame="100" value="0.39" />
                    <Key frame="110" value="1" />
                    <Key frame="140" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="80" value="7.97103" />
                    <Key frame="90" value="7.97103" />
                    <Key frame="100" value="7.97103" />
                    <Key frame="110" value="7.97103" />
                    <Key frame="140" value="6.78287" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="80" value="5.97817" />
                    <Key frame="90" value="5.97817" />
                    <Key frame="100" value="5.97817" />
                    <Key frame="110" value="5.97817" />
                    <Key frame="140" value="6.71762" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="80" value="-9.74" />
                    <Key frame="90" value="-9.74" />
                    <Key frame="100" value="-9.74" />
                    <Key frame="110" value="-9.74" />
                    <Key frame="140" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="80" value="-4.87542" />
                    <Key frame="90" value="-4.87542" />
                    <Key frame="100" value="-4.87542" />
                    <Key frame="110" value="-4.87542" />
                    <Key frame="140" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="80" value="-6.2" />
                    <Key frame="90" value="18.9" />
                    <Key frame="100" value="-6.2" />
                    <Key frame="110" value="18.9" />
                    <Key frame="140" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="80" value="0.4" />
                    <Key frame="90" value="28.1" />
                    <Key frame="100" value="0.4" />
                    <Key frame="110" value="28.1" />
                    <Key frame="140" value="22.6" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="80" value="-82.5" />
                    <Key frame="90" value="-82.5" />
                    <Key frame="100" value="-82.5" />
                    <Key frame="110" value="-82.5" />
                    <Key frame="140" value="8.12719" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="80" value="5.01" />
                    <Key frame="90" value="5.01" />
                    <Key frame="100" value="5.01" />
                    <Key frame="110" value="5.01" />
                    <Key frame="140" value="4.61658" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="80" value="6.23891" />
                    <Key frame="90" value="6.23891" />
                    <Key frame="100" value="6.23891" />
                    <Key frame="110" value="6.23891" />
                    <Key frame="140" value="5.97106" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="80" value="88.5" />
                    <Key frame="90" value="52.3" />
                    <Key frame="100" value="88.5" />
                    <Key frame="110" value="52.3" />
                    <Key frame="140" value="88.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="80" value="63" />
                    <Key frame="90" value="63" />
                    <Key frame="100" value="63" />
                    <Key frame="110" value="63" />
                    <Key frame="140" value="45.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="80" value="0.31" />
                    <Key frame="90" value="1" />
                    <Key frame="100" value="0.26" />
                    <Key frame="110" value="1" />
                    <Key frame="140" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="80" value="7.46138" />
                    <Key frame="90" value="7.46138" />
                    <Key frame="100" value="7.46138" />
                    <Key frame="110" value="7.46138" />
                    <Key frame="140" value="6.78289" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="80" value="-6.10102" />
                    <Key frame="90" value="-6.10102" />
                    <Key frame="100" value="-6.10102" />
                    <Key frame="110" value="-6.10102" />
                    <Key frame="140" value="-6.71728" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="80" value="-9.74" />
                    <Key frame="90" value="-9.74" />
                    <Key frame="100" value="-9.74" />
                    <Key frame="110" value="-9.74" />
                    <Key frame="140" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="80" value="-4.94408" />
                    <Key frame="90" value="-4.94408" />
                    <Key frame="100" value="-4.94408" />
                    <Key frame="110" value="-4.94408" />
                    <Key frame="140" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="80" value="-21.8" />
                    <Key frame="90" value="14.1" />
                    <Key frame="100" value="-21.8" />
                    <Key frame="110" value="14.1" />
                    <Key frame="140" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="80" value="-2.7" />
                    <Key frame="90" value="-21.5" />
                    <Key frame="100" value="-2.7" />
                    <Key frame="110" value="-21.5" />
                    <Key frame="140" value="-26.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="80" value="59.6" />
                    <Key frame="90" value="59.6" />
                    <Key frame="100" value="59.6" />
                    <Key frame="110" value="59.6" />
                    <Key frame="140" value="-8.51448" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="entrée" id="11" localization="8" tooltip="" x="507" y="0">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="15" start_frame="1" end_frame="299" size="299">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="texte" index="1">
                    <Diagram>
                      <Box name="EntryPresentation" id="4" localization="8" tooltip="" x="531" y="174">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Information très importante, le premier couloir de la visite consiste à la découverte."
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="80" value="-18.2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="20" value="-48.3" />
                    <Key frame="40" value="-48.3" />
                    <Key frame="60" value="-48.3" />
                    <Key frame="80" value="-0.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="80" value="4.61659" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="80" value="-5.97129" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="80" value="-79" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="80" value="-46.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="80" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="80" value="6.78287" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="80" value="6.71762" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="80" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="80" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="80" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="80" value="22.6" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="80" value="8.12719" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="80" value="4.61658" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="80" value="5.97106" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="40" value="28.1" />
                    <Key frame="60" value="28.1" />
                    <Key frame="80" value="88.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="105.4" />
                    <Key frame="40" value="119.5" />
                    <Key frame="60" value="119.5" />
                    <Key frame="80" value="45.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="40" value="0.81" />
                    <Key frame="60" value="0.81" />
                    <Key frame="80" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="80" value="6.78289" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="80" value="-6.71728" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="80" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="80" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="71.8" />
                    <Key frame="40" value="68.9" />
                    <Key frame="60" value="68.9" />
                    <Key frame="80" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="-76" />
                    <Key frame="40" value="-76" />
                    <Key frame="60" value="-76" />
                    <Key frame="80" value="-26.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="80" value="-8.51448" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="photos R2" id="17" localization="8" tooltip="" x="1708" y="0">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="300" size="300">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="texte" index="1">
                    <Diagram>
                      <Box name="python box" id="2" localization="8" tooltip="Say some text. The text can be localized." x="260" y="41">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value=" Ne pas utiliser de flash pour les photos." default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="20" value="-0.116398" />
                    <Key frame="27" value="-0.116398" />
                    <Key frame="30" value="-0.116398" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="20" value="0.02008" />
                    <Key frame="27" value="0.02008" />
                    <Key frame="30" value="0.02008" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="-53.3" />
                    <Key frame="27" value="-53.3" />
                    <Key frame="30" value="-53.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="-61.4" />
                    <Key frame="27" value="-61.4" />
                    <Key frame="30" value="-61.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="20" value="0.89" />
                    <Key frame="27" value="0" />
                    <Key frame="30" value="0.89" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="8.9" />
                    <Key frame="27" value="8.9" />
                    <Key frame="30" value="8.9" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="-1.8" />
                    <Key frame="27" value="-1.8" />
                    <Key frame="30" value="-1.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="20" value="-8.5" />
                    <Key frame="27" value="-8.5" />
                    <Key frame="30" value="-8.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="71" />
                    <Key frame="27" value="71" />
                    <Key frame="30" value="71" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="79.6189" />
                    <Key frame="27" value="79.6189" />
                    <Key frame="30" value="79.6189" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="20" value="1" />
                    <Key frame="27" value="1" />
                    <Key frame="30" value="1" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="23.2" />
                    <Key frame="27" value="23.2" />
                    <Key frame="30" value="23.2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="-1" />
                    <Key frame="27" value="-1" />
                    <Key frame="30" value="-1" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="20" value="0.26494" />
                    <Key frame="27" value="0.26494" />
                    <Key frame="30" value="0.26494" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="drop" id="19" localization="8" tooltip="" x="1803" y="674">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="16" start_frame="1" end_frame="300" size="300">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="texte" index="1">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="305" y="120">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="Ne pas toucher l’eau et ne rien jeter dans les bassins" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="546" y="132">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="6" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="10" value="-0.164859" />
                    <Key frame="20" value="-0.164859" />
                    <Key frame="30" value="-0.164859" />
                    <Key frame="40" value="-0.164859" />
                    <Key frame="50" value="-0.164859" />
                    <Key frame="60" value="-0.164859" />
                    <Key frame="70" value="-0.164859" />
                    <Key frame="80" value="-0.164859" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="10" value="-25.2" />
                    <Key frame="20" value="23.9" />
                    <Key frame="30" value="-25.2" />
                    <Key frame="40" value="23.9" />
                    <Key frame="50" value="-25.2" />
                    <Key frame="60" value="23.9" />
                    <Key frame="70" value="-25.2" />
                    <Key frame="80" value="23.9" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="10" value="-57.7307" />
                    <Key frame="20" value="-57.7307" />
                    <Key frame="30" value="-57.7307" />
                    <Key frame="40" value="-57.7307" />
                    <Key frame="50" value="-57.7307" />
                    <Key frame="60" value="-57.7307" />
                    <Key frame="70" value="-57.7307" />
                    <Key frame="80" value="-57.7307" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="10" value="-79.1656" />
                    <Key frame="20" value="-79.1656" />
                    <Key frame="30" value="-79.1656" />
                    <Key frame="40" value="-79.1656" />
                    <Key frame="50" value="-79.1656" />
                    <Key frame="60" value="-79.1656" />
                    <Key frame="70" value="-79.1656" />
                    <Key frame="80" value="-79.1656" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="10" value="0.249664" />
                    <Key frame="20" value="0.249664" />
                    <Key frame="30" value="0.249664" />
                    <Key frame="40" value="0.249664" />
                    <Key frame="50" value="0.249664" />
                    <Key frame="60" value="0.249664" />
                    <Key frame="70" value="0.249664" />
                    <Key frame="80" value="0.249664" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="10" value="80.0737" />
                    <Key frame="20" value="80.0737" />
                    <Key frame="30" value="80.0737" />
                    <Key frame="40" value="80.0737" />
                    <Key frame="50" value="80.0737" />
                    <Key frame="60" value="80.0737" />
                    <Key frame="70" value="80.0737" />
                    <Key frame="80" value="80.0737" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="10" value="16.9215" />
                    <Key frame="20" value="16.9215" />
                    <Key frame="30" value="16.9215" />
                    <Key frame="40" value="16.9215" />
                    <Key frame="50" value="16.9215" />
                    <Key frame="60" value="16.9215" />
                    <Key frame="70" value="16.9215" />
                    <Key frame="80" value="16.9215" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="10" value="-0.116328" />
                    <Key frame="20" value="-0.116328" />
                    <Key frame="30" value="-0.116328" />
                    <Key frame="40" value="-0.116328" />
                    <Key frame="50" value="-0.116328" />
                    <Key frame="60" value="-0.116328" />
                    <Key frame="70" value="-0.116328" />
                    <Key frame="80" value="-0.116328" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="10" value="37" />
                    <Key frame="20" value="37" />
                    <Key frame="30" value="37" />
                    <Key frame="40" value="37" />
                    <Key frame="50" value="37" />
                    <Key frame="60" value="37" />
                    <Key frame="70" value="37" />
                    <Key frame="80" value="37" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="10" value="79.7" />
                    <Key frame="20" value="79.7" />
                    <Key frame="30" value="79.7" />
                    <Key frame="40" value="79.7" />
                    <Key frame="50" value="79.7" />
                    <Key frame="60" value="79.7" />
                    <Key frame="70" value="79.7" />
                    <Key frame="80" value="79.7" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="10" value="0.9" />
                    <Key frame="20" value="0" />
                    <Key frame="30" value="0.9" />
                    <Key frame="40" value="0" />
                    <Key frame="50" value="0.9" />
                    <Key frame="60" value="0" />
                    <Key frame="70" value="0.9" />
                    <Key frame="80" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="10" value="36.5" />
                    <Key frame="20" value="36.5" />
                    <Key frame="30" value="36.5" />
                    <Key frame="40" value="36.5" />
                    <Key frame="50" value="36.5" />
                    <Key frame="60" value="36.5" />
                    <Key frame="70" value="36.5" />
                    <Key frame="80" value="36.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="10" value="-16.9158" />
                    <Key frame="20" value="-16.9158" />
                    <Key frame="30" value="-16.9158" />
                    <Key frame="40" value="-16.9158" />
                    <Key frame="50" value="-16.9158" />
                    <Key frame="60" value="-16.9158" />
                    <Key frame="70" value="-16.9158" />
                    <Key frame="80" value="-16.9158" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="10" value="-40.6" />
                    <Key frame="20" value="-40.6" />
                    <Key frame="30" value="-40.6" />
                    <Key frame="40" value="-40.6" />
                    <Key frame="50" value="-40.6" />
                    <Key frame="60" value="-40.6" />
                    <Key frame="70" value="-40.6" />
                    <Key frame="80" value="-40.6" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="wow (1)" id="21" localization="8" tooltip="" x="2147" y="0">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="20" start_frame="1" end_frame="30" size="30">
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="20" value="-9.61289" />
                    <Key frame="30" value="-9.61289" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="20" value="0" />
                    <Key frame="30" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="20" value="4.62119" />
                    <Key frame="30" value="4.62119" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="20" value="-5.85221" />
                    <Key frame="30" value="-5.85221" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="-88.5" />
                    <Key frame="30" value="-72.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="-64.1" />
                    <Key frame="30" value="-64.1" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="20" value="0.42" />
                    <Key frame="30" value="1" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="20" value="7.97103" />
                    <Key frame="30" value="7.97103" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="20" value="5.97817" />
                    <Key frame="30" value="5.97817" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="20" value="-9.74" />
                    <Key frame="30" value="-9.74" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="20" value="-4.87542" />
                    <Key frame="30" value="-4.87542" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="-6.2" />
                    <Key frame="30" value="18.9" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="0.4" />
                    <Key frame="30" value="28.1" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="20" value="-82.5" />
                    <Key frame="30" value="-82.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="20" value="5.01" />
                    <Key frame="30" value="5.01" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="20" value="6.23891" />
                    <Key frame="30" value="6.23891" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="88.5" />
                    <Key frame="30" value="52.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="63" />
                    <Key frame="30" value="63" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="20" value="0.31" />
                    <Key frame="30" value="1" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="20" value="7.46138" />
                    <Key frame="30" value="7.46138" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="20" value="-6.10102" />
                    <Key frame="30" value="-6.10102" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="20" value="-9.74" />
                    <Key frame="30" value="-9.74" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="20" value="-4.94408" />
                    <Key frame="30" value="-4.94408" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="-21.8" />
                    <Key frame="30" value="14.1" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="-2.7" />
                    <Key frame="30" value="-21.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="20" value="59.6" />
                    <Key frame="30" value="59.6" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="Say (4)" id="22" localization="8" tooltip="Say some text. The text can be localized." x="2291" y="0">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="et très important la roue des actions." default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="supermen position2 (1)" id="24" localization="8" tooltip="" x="2420" y="0">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="17" start_frame="1" end_frame="300" size="300">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="phrase" index="1">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="342" y="50">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="Merci et j&apos;espère que vous en apprendrez davantage et que vous vous sentirez inspiré pour nous aider à protéger l&apos;habitat sans lequel nous ne pouvons pas vivre : l&apos;océan." default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="17" value="-9.61289" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="17" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="17" value="4.62119" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="17" value="-5.89714" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="17" value="-88.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="17" value="10.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="17" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="17" value="8.23021" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="17" value="6.02407" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="17" value="-9.74" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="17" value="-5.22081" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="17" value="83.1366" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="17" value="31.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="17" value="-9.9" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="17" value="5.01" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="17" value="6.28682" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="17" value="5.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="17" value="-19.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="17" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="17" value="7.71664" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="17" value="-6.51626" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="17" value="-9.74" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="17" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="17" value="-83.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="17" value="2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="17" value="6.61284" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="goodbye" id="26" localization="8" tooltip="" x="2550" y="0">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="15" start_frame="1" end_frame="120" size="120">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="texte" index="1">
                    <Diagram>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="383" y="122">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="Je vous souhaite une très bonne visite." default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="20" value="-0.312756" />
                    <Key frame="30" value="-0.312756" />
                    <Key frame="40" value="-0.312756" />
                    <Key frame="50" value="-0.312756" />
                    <Key frame="60" value="-0.312756" />
                    <Key frame="70" value="-0.312756" />
                    <Key frame="80" value="-0.312756" />
                    <Key frame="90" value="-18.2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="20" value="0" />
                    <Key frame="30" value="0" />
                    <Key frame="40" value="0" />
                    <Key frame="50" value="0" />
                    <Key frame="60" value="0" />
                    <Key frame="70" value="0" />
                    <Key frame="80" value="0" />
                    <Key frame="90" value="-0.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="-57.9838" />
                    <Key frame="30" value="-57.9838" />
                    <Key frame="40" value="-57.9838" />
                    <Key frame="50" value="-57.9838" />
                    <Key frame="60" value="-57.9838" />
                    <Key frame="70" value="-57.9838" />
                    <Key frame="80" value="-57.9838" />
                    <Key frame="90" value="-79" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="-79.5542" />
                    <Key frame="30" value="-79.5542" />
                    <Key frame="40" value="-79.5542" />
                    <Key frame="50" value="-79.5542" />
                    <Key frame="60" value="-79.5542" />
                    <Key frame="70" value="-79.5542" />
                    <Key frame="80" value="-79.5542" />
                    <Key frame="90" value="-46.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="20" value="1" />
                    <Key frame="30" value="1" />
                    <Key frame="40" value="1" />
                    <Key frame="50" value="1" />
                    <Key frame="60" value="1" />
                    <Key frame="70" value="1" />
                    <Key frame="80" value="1" />
                    <Key frame="90" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="-25.8" />
                    <Key frame="30" value="-25.8" />
                    <Key frame="40" value="-25.8" />
                    <Key frame="50" value="-25.8" />
                    <Key frame="60" value="-25.8" />
                    <Key frame="70" value="-25.8" />
                    <Key frame="80" value="-25.8" />
                    <Key frame="90" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="17.5574" />
                    <Key frame="30" value="-0.6" />
                    <Key frame="40" value="49.3" />
                    <Key frame="50" value="-5.2" />
                    <Key frame="60" value="49.3" />
                    <Key frame="70" value="-5.2" />
                    <Key frame="80" value="49.3" />
                    <Key frame="90" value="22.6" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="20" value="62.1" />
                    <Key frame="30" value="62.1" />
                    <Key frame="40" value="62.1" />
                    <Key frame="50" value="62.1" />
                    <Key frame="60" value="62.1" />
                    <Key frame="70" value="62.1" />
                    <Key frame="80" value="62.1" />
                    <Key frame="90" value="8.12719" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="57.4792" />
                    <Key frame="30" value="57.4792" />
                    <Key frame="40" value="57.4792" />
                    <Key frame="50" value="57.4792" />
                    <Key frame="60" value="57.4792" />
                    <Key frame="70" value="57.4792" />
                    <Key frame="80" value="57.4792" />
                    <Key frame="90" value="88.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="79.5456" />
                    <Key frame="30" value="79.5456" />
                    <Key frame="40" value="79.5456" />
                    <Key frame="50" value="79.5456" />
                    <Key frame="60" value="79.5456" />
                    <Key frame="70" value="79.5456" />
                    <Key frame="80" value="79.5456" />
                    <Key frame="90" value="45.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="20" value="0.245336" />
                    <Key frame="30" value="0.245336" />
                    <Key frame="40" value="0.245336" />
                    <Key frame="50" value="0.245336" />
                    <Key frame="60" value="0.245336" />
                    <Key frame="70" value="0.245336" />
                    <Key frame="80" value="0.245336" />
                    <Key frame="90" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="79.2" />
                    <Key frame="30" value="79.2" />
                    <Key frame="40" value="79.2" />
                    <Key frame="50" value="79.2" />
                    <Key frame="60" value="79.2" />
                    <Key frame="70" value="79.2" />
                    <Key frame="80" value="79.2" />
                    <Key frame="90" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="-17.0465" />
                    <Key frame="30" value="-17.0465" />
                    <Key frame="40" value="-17.0465" />
                    <Key frame="50" value="-17.0465" />
                    <Key frame="60" value="-17.0465" />
                    <Key frame="70" value="-17.0465" />
                    <Key frame="80" value="-17.0465" />
                    <Key frame="90" value="-26.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="20" value="0.262504" />
                    <Key frame="30" value="0.262504" />
                    <Key frame="40" value="0.262504" />
                    <Key frame="50" value="0.262504" />
                    <Key frame="60" value="0.262504" />
                    <Key frame="70" value="0.262504" />
                    <Key frame="80" value="0.262504" />
                    <Key frame="90" value="-8.51448" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="90" value="4.61659" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="90" value="-5.97129" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="90" value="6.78287" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="90" value="6.71762" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="90" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="90" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="90" value="4.61658" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="90" value="5.97106" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="90" value="6.78289" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="90" value="-6.71728" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="90" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="90" value="-5.29" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="SayingHello" id="12" localization="8" tooltip="" x="61" y="735">
              <bitmap>media/images/box/box-python-script.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Bienvenue"
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Box name="IntroduceHimself" id="4" localization="8" tooltip="" x="179" y="733">
              <bitmap>media/images/box/box-python-script.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Bonjour je suis Nao."
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Box name="IntroduceOdysseo" id="5" localization="8" tooltip="" x="302" y="731">
              <bitmap>media/images/box/box-python-script.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Nous avons 45 bassins de tailles différentes, 200 espèces et 3500 animaux. La capacité totale d’Odysseo est de 2 millions litres d’eau."
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Box name="Say Text" id="7" localization="8" tooltip="Say the text received on its input." x="774" y="1419">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Text Edit" id="16" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="512" y="1291">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Hello I\'m NAO")]]>
                </content>
              </script>
              <pluginContent>
                <text>
                  <![CDATA[Hello I'm NAO]]>
                </text>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
              <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
            </Box>
            <Box name="Say Text (1)" id="23" localization="8" tooltip="Say the text received on its input." x="547" y="1437">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Text Edit (1)" id="25" localization="8" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="275" y="1445">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped("Bonjour je suis NAO")]]>
                </content>
              </script>
              <pluginContent>
                <text>
                  <![CDATA[Bonjour je suis NAO]]>
                </text>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
              <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
            </Box>
            <Box name="startPosition" id="13" localization="8" tooltip="" x="258" y="0">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="15" start_frame="1" end_frame="140" size="140">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="59.4604">
                      <Box name="IntroduceHimself" id="4" localization="8" tooltip="" x="1124" y="212">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Bonjour je suis Nao. Je suis heureux de pouvoir vous parler aujourd'hui"
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="957" y="215">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="Wait (1)" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1293" y="207">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="4" />
                      <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="20" value="-18.2" />
                    <Key frame="60" value="-17.9" />
                    <Key frame="100" value="-18.2" />
                    <Key frame="140" value="-17.9" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="20" value="48.5" />
                    <Key frame="60" value="-37.4" />
                    <Key frame="100" value="48.5" />
                    <Key frame="140" value="-37.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="20" value="4.61659" />
                    <Key frame="60" value="4.61659" />
                    <Key frame="100" value="4.61659" />
                    <Key frame="140" value="4.61659" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="20" value="-5.97129" />
                    <Key frame="60" value="-5.97129" />
                    <Key frame="100" value="-5.97129" />
                    <Key frame="140" value="-5.97129" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="-79" />
                    <Key frame="60" value="-79" />
                    <Key frame="100" value="-79" />
                    <Key frame="140" value="-79" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="-46.8" />
                    <Key frame="60" value="-46.8" />
                    <Key frame="100" value="-46.8" />
                    <Key frame="140" value="-46.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="20" value="0.2998" />
                    <Key frame="60" value="0.2998" />
                    <Key frame="100" value="0.2998" />
                    <Key frame="140" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="20" value="6.78287" />
                    <Key frame="60" value="6.78287" />
                    <Key frame="100" value="6.78287" />
                    <Key frame="140" value="6.78287" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="20" value="6.71762" />
                    <Key frame="60" value="6.71762" />
                    <Key frame="100" value="6.71762" />
                    <Key frame="140" value="6.71762" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="20" value="-9.74084" />
                    <Key frame="60" value="-9.74084" />
                    <Key frame="100" value="-9.74084" />
                    <Key frame="140" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="20" value="-5.29" />
                    <Key frame="60" value="-5.29" />
                    <Key frame="100" value="-5.29" />
                    <Key frame="140" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="119.5" />
                    <Key frame="60" value="119.5" />
                    <Key frame="100" value="119.5" />
                    <Key frame="140" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="22.6" />
                    <Key frame="60" value="22.6" />
                    <Key frame="100" value="22.6" />
                    <Key frame="140" value="22.6" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="20" value="8.12719" />
                    <Key frame="60" value="8.12719" />
                    <Key frame="100" value="8.12719" />
                    <Key frame="140" value="8.12719" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="20" value="4.61658" />
                    <Key frame="60" value="4.61658" />
                    <Key frame="100" value="4.61658" />
                    <Key frame="140" value="4.61658" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="20" value="5.97106" />
                    <Key frame="60" value="5.97106" />
                    <Key frame="100" value="5.97106" />
                    <Key frame="140" value="5.97106" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="88.5" />
                    <Key frame="60" value="88.5" />
                    <Key frame="100" value="88.5" />
                    <Key frame="140" value="88.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="45.5" />
                    <Key frame="60" value="45.5" />
                    <Key frame="100" value="45.5" />
                    <Key frame="140" value="45.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="20" value="0.2998" />
                    <Key frame="60" value="0.2998" />
                    <Key frame="100" value="0.2998" />
                    <Key frame="140" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="20" value="6.78289" />
                    <Key frame="60" value="6.78289" />
                    <Key frame="100" value="6.78289" />
                    <Key frame="140" value="6.78289" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="20" value="-6.71728" />
                    <Key frame="60" value="-6.71728" />
                    <Key frame="100" value="-6.71728" />
                    <Key frame="140" value="-6.71728" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="20" value="-9.74084" />
                    <Key frame="60" value="-9.74084" />
                    <Key frame="100" value="-9.74084" />
                    <Key frame="140" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="20" value="-5.29" />
                    <Key frame="60" value="-5.29" />
                    <Key frame="100" value="-5.29" />
                    <Key frame="140" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="119.5" />
                    <Key frame="60" value="119.5" />
                    <Key frame="100" value="119.5" />
                    <Key frame="140" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="-26.8" />
                    <Key frame="60" value="-26.8" />
                    <Key frame="100" value="-26.8" />
                    <Key frame="140" value="-26.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="20" value="-8.51448" />
                    <Key frame="60" value="-8.51448" />
                    <Key frame="100" value="-8.51448" />
                    <Key frame="140" value="-8.51448" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="Set Language" id="18" localization="8" tooltip="Set the language of your robot for the current application. Your robot will speak and understand the selected language as long as your application has focus. Any following call to ALSpeechRecognition (Speech Reco. box for instance), ALTextToSpeech (Say box for instance) or ALDialog will use this language.&#x0A;" plugin="setlanguage_plugin" x="280" y="1289">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
# -*- coding: utf-8 -*-
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.setTTS = True
        self.setASR = True
        self.setDialog = True
        self.language = "English"

    def getService(self, serviceName, humainName):
        service = None
        try:
            service = self.session().service(serviceName)
        except:
            self.logger.warn("%s is not available, language setting cannot be applied to %s." % (serviceName, humainName))
        return service

    def onLoad(self):
        if self.setTTS:
            self.tts = self.getService("ALTextToSpeech", "speech")
        if self.setASR:
            self.asr = self.getService("ALSpeechRecognition", "recognition")
        if self.setDialog:
            self.dialog = self.getService("ALDialog", "dialog")

    def setLanguage(self, service, serviceName):
        try:
            if service is None:
                return False
            service.setLanguage(self.language)
            return True
        except Exception as e:
            self.logger.error("Could not set language %s for %s: %s" % (self.language, serviceName, e))
            return False

    def onInput_onSet(self):
        res = True
        if self.setTTS:
            res = self.setLanguage(self.tts, "ALTextToSpeech") and res
        if self.setASR:
            res = self.setLanguage(self.asr, "ALSpeechRecognition") and res
        if self.setDialog:
            res = self.setLanguage(self.dialog, "ALDialog") and res

        if res:
            self.onReady()
        else:
            self.logger.error("Language %s could not be set for one or more services." % self.language)
            self.onError()]]>
                </content>
              </script>
              <pluginContent>
                <language>English</language>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" />
              <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" />
              <Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="Error output:&#x0A;- triggered if the language asked cannot be set" id="4" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Set Language (1)" id="27" localization="8" tooltip="Set the language of your robot for the current application. Your robot will speak and understand the selected language as long as your application has focus. Any following call to ALSpeechRecognition (Speech Reco. box for instance), ALTextToSpeech (Say box for instance) or ALDialog will use this language.&#x0A;" plugin="setlanguage_plugin" x="41" y="1430">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
# -*- coding: utf-8 -*-
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.setTTS = True
        self.setASR = True
        self.setDialog = True
        self.language = "French"

    def getService(self, serviceName, humainName):
        service = None
        try:
            service = self.session().service(serviceName)
        except:
            self.logger.warn("%s is not available, language setting cannot be applied to %s." % (serviceName, humainName))
        return service

    def onLoad(self):
        if self.setTTS:
            self.tts = self.getService("ALTextToSpeech", "speech")
        if self.setASR:
            self.asr = self.getService("ALSpeechRecognition", "recognition")
        if self.setDialog:
            self.dialog = self.getService("ALDialog", "dialog")

    def setLanguage(self, service, serviceName):
        try:
            if service is None:
                return False
            service.setLanguage(self.language)
            return True
        except Exception as e:
            self.logger.error("Could not set language %s for %s: %s" % (self.language, serviceName, e))
            return False

    def onInput_onSet(self):
        res = True
        if self.setTTS:
            res = self.setLanguage(self.tts, "ALTextToSpeech") and res
        if self.setASR:
            res = self.setLanguage(self.asr, "ALSpeechRecognition") and res
        if self.setDialog:
            res = self.setLanguage(self.dialog, "ALDialog") and res

        if res:
            self.onReady()
        else:
            self.logger.error("Language %s could not be set for one or more services." % self.language)
            self.onError()]]>
                </content>
              </script>
              <pluginContent>
                <language>French</language>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" />
              <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" />
              <Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="Error output:&#x0A;- triggered if the language asked cannot be set" id="4" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="nindoOdysseo" id="9" localization="8" tooltip="" x="756" y="0">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="20" start_frame="1" end_frame="299" size="299">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="phrase mot clé" index="1">
                    <Diagram>
                      <Box name="KeyWords" id="5" localization="8" tooltip="" x="612" y="57">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Notre moto est Connaitre, Aimer, Protéger. Nous ne pouvons pas aimer ce que nous ne connaissons pas et nous ne pouvons pas protéger ce que nous n’aimons pas."
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="65" value="-0.316031" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="65" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="65" value="-84.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="65" value="-31.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="65" value="1" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="65" value="46.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="65" value="-18" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="65" value="-56.1" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="65" value="25.9" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="65" value="83.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="65" value="0.26" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="65" value="73.497" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="65" value="-10.2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="65" value="-3.4" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="YoctopusSpeech" id="28" localization="8" tooltip="" x="939" y="109">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="15" start_frame="1" end_frame="140" size="140">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="84.0896">
                      <Box name="recomendation" id="5" localization="8" tooltip="" x="832" y="286">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Je vous recommande vraiment de retrouver notre Mascote Yoctopus, avant la fin du couloir et de faire le jeu qu'il propose. Je vais vous aider, il est juste avant les 3 aquariums à droite. Ils se ressemblent tous mais ne le sont pas. Yoctopus est une pieuvre très cool et intelligente, il vous en dira plus. J'espère que vous le trouverez."
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="20" value="-18.2" />
                    <Key frame="60" value="-17.9" />
                    <Key frame="100" value="-18.2" />
                    <Key frame="140" value="-17.9" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="20" value="48.5" />
                    <Key frame="60" value="-37.4" />
                    <Key frame="100" value="48.5" />
                    <Key frame="140" value="-37.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="20" value="4.61659" />
                    <Key frame="60" value="4.61659" />
                    <Key frame="100" value="4.61659" />
                    <Key frame="140" value="4.61659" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="20" value="-5.97129" />
                    <Key frame="60" value="-5.97129" />
                    <Key frame="100" value="-5.97129" />
                    <Key frame="140" value="-5.97129" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="-79" />
                    <Key frame="60" value="-79" />
                    <Key frame="100" value="-79" />
                    <Key frame="140" value="-79" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="-46.8" />
                    <Key frame="60" value="-46.8" />
                    <Key frame="100" value="-46.8" />
                    <Key frame="140" value="-46.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="20" value="0.2998" />
                    <Key frame="60" value="0.2998" />
                    <Key frame="100" value="0.2998" />
                    <Key frame="140" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="20" value="6.78287" />
                    <Key frame="60" value="6.78287" />
                    <Key frame="100" value="6.78287" />
                    <Key frame="140" value="6.78287" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="20" value="6.71762" />
                    <Key frame="60" value="6.71762" />
                    <Key frame="100" value="6.71762" />
                    <Key frame="140" value="6.71762" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="20" value="-9.74084" />
                    <Key frame="60" value="-9.74084" />
                    <Key frame="100" value="-9.74084" />
                    <Key frame="140" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="20" value="-5.29" />
                    <Key frame="60" value="-5.29" />
                    <Key frame="100" value="-5.29" />
                    <Key frame="140" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="119.5" />
                    <Key frame="60" value="119.5" />
                    <Key frame="100" value="119.5" />
                    <Key frame="140" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="22.6" />
                    <Key frame="60" value="22.6" />
                    <Key frame="100" value="22.6" />
                    <Key frame="140" value="22.6" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="20" value="8.12719" />
                    <Key frame="60" value="8.12719" />
                    <Key frame="100" value="8.12719" />
                    <Key frame="140" value="8.12719" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="20" value="4.61658" />
                    <Key frame="60" value="4.61658" />
                    <Key frame="100" value="4.61658" />
                    <Key frame="140" value="4.61658" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="20" value="5.97106" />
                    <Key frame="60" value="5.97106" />
                    <Key frame="100" value="5.97106" />
                    <Key frame="140" value="5.97106" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="88.5" />
                    <Key frame="60" value="88.5" />
                    <Key frame="100" value="88.5" />
                    <Key frame="140" value="88.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="45.5" />
                    <Key frame="60" value="45.5" />
                    <Key frame="100" value="45.5" />
                    <Key frame="140" value="45.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="20" value="0.2998" />
                    <Key frame="60" value="0.2998" />
                    <Key frame="100" value="0.2998" />
                    <Key frame="140" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="20" value="6.78289" />
                    <Key frame="60" value="6.78289" />
                    <Key frame="100" value="6.78289" />
                    <Key frame="140" value="6.78289" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="20" value="-6.71728" />
                    <Key frame="60" value="-6.71728" />
                    <Key frame="100" value="-6.71728" />
                    <Key frame="140" value="-6.71728" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="20" value="-9.74084" />
                    <Key frame="60" value="-9.74084" />
                    <Key frame="100" value="-9.74084" />
                    <Key frame="140" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="20" value="-5.29" />
                    <Key frame="60" value="-5.29" />
                    <Key frame="100" value="-5.29" />
                    <Key frame="140" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="119.5" />
                    <Key frame="60" value="119.5" />
                    <Key frame="100" value="119.5" />
                    <Key frame="140" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="-26.8" />
                    <Key frame="60" value="-26.8" />
                    <Key frame="100" value="-26.8" />
                    <Key frame="140" value="-26.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="20" value="-8.51448" />
                    <Key frame="60" value="-8.51448" />
                    <Key frame="100" value="-8.51448" />
                    <Key frame="140" value="-8.51448" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="Animated Say" id="31" localization="8" tooltip="Say some text with animations. The text can be localized." x="879" y="0">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="Je vous recommande vraiment de retrouver notre Mascote Yoctopus, avant la fin du couloir et de faire le jeu qu&apos;il propose. Je vais vous aider, il est juste avant les 3 aquariums à droite. Ils se ressemblent tous mais ne le sont pas. Yoctopus est une pieuvre très cool et intelligente, il vous en dira plus. J&apos;espère que vous le trouverez." default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="supermanPanel" id="29" localization="8" tooltip="" x="1294" y="0">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="15" start_frame="1" end_frame="300" size="300">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="phrase" index="1">
                    <Diagram>
                      <Box name="PanelInfo" id="5" localization="8" tooltip="" x="691" y="55">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Au cours de la visite, vous allez voir des panneaux informatifs qui vous informent sur la zone. N’hésitez pas à les lire pour avoir des informations et aussi pour savoir comment vous pouvez aider. Si vous voulez en apprendre plus sur les espèces, regardez les écrans. Vous verrez défiler les informations sur les espèces que vous pouvez observer."
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="Say" id="2" localization="8" tooltip="Say some text. The text can be localized." x="561" y="286">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="Au cours de la visite, vous allez voir des panneaux informatifs qui vous informent sur la zone. N’hésitez pas à les lire pour avoir des informations et aussi pour savoir comment vous pouvez aider. Si vous voulez en apprendre plus sur les espèces, regardez les écrans. Vous verrez défiler les informations sur les espèces que vous pouvez observer." default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="60" value="-9.61289" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="60" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="60" value="4.62119" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="60" value="-5.89714" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="60" value="-88.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="60" value="10.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="60" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="60" value="8.23021" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="60" value="6.02407" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="60" value="-9.74" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="60" value="-5.22081" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="60" value="83.1366" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="60" value="31.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="60" value="-9.9" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="60" value="5.01" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="60" value="6.28682" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="60" value="5.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="60" value="-19.3" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="60" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="60" value="7.71664" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="60" value="-6.51626" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="60" value="-9.74" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="60" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="60" value="-83.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="60" value="2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="60" value="6.61284" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="Rules" id="14" localization="8" tooltip="" x="1432" y="0">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="15" start_frame="1" end_frame="300" size="300">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="59.4604">
                      <Box name="IntroduceHimself" id="4" localization="8" tooltip="" x="1124" y="212">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Il est toutefois nécessaire de respecter les consignes suivantes pour le bien-être des animaux et pour avoir une bonne visite :"
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="957" y="215">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="Wait (1)" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1297" y="214">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="4" />
                      <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="20" value="-18.2" />
                    <Key frame="60" value="-17.9" />
                    <Key frame="100" value="-18.2" />
                    <Key frame="140" value="-17.9" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="20" value="48.5" />
                    <Key frame="60" value="-37.4" />
                    <Key frame="100" value="48.5" />
                    <Key frame="140" value="-37.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="20" value="4.61659" />
                    <Key frame="60" value="4.61659" />
                    <Key frame="100" value="4.61659" />
                    <Key frame="140" value="4.61659" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="20" value="-5.97129" />
                    <Key frame="60" value="-5.97129" />
                    <Key frame="100" value="-5.97129" />
                    <Key frame="140" value="-5.97129" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="-79" />
                    <Key frame="60" value="-79" />
                    <Key frame="100" value="-79" />
                    <Key frame="140" value="-79" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="-46.8" />
                    <Key frame="60" value="-46.8" />
                    <Key frame="100" value="-46.8" />
                    <Key frame="140" value="-46.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="20" value="0.2998" />
                    <Key frame="60" value="0.2998" />
                    <Key frame="100" value="0.2998" />
                    <Key frame="140" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="20" value="6.78287" />
                    <Key frame="60" value="6.78287" />
                    <Key frame="100" value="6.78287" />
                    <Key frame="140" value="6.78287" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="20" value="6.71762" />
                    <Key frame="60" value="6.71762" />
                    <Key frame="100" value="6.71762" />
                    <Key frame="140" value="6.71762" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="20" value="-9.74084" />
                    <Key frame="60" value="-9.74084" />
                    <Key frame="100" value="-9.74084" />
                    <Key frame="140" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="20" value="-5.29" />
                    <Key frame="60" value="-5.29" />
                    <Key frame="100" value="-5.29" />
                    <Key frame="140" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="119.5" />
                    <Key frame="60" value="119.5" />
                    <Key frame="100" value="119.5" />
                    <Key frame="140" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="22.6" />
                    <Key frame="60" value="22.6" />
                    <Key frame="100" value="22.6" />
                    <Key frame="140" value="22.6" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="20" value="8.12719" />
                    <Key frame="60" value="8.12719" />
                    <Key frame="100" value="8.12719" />
                    <Key frame="140" value="8.12719" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="20" value="4.61658" />
                    <Key frame="60" value="4.61658" />
                    <Key frame="100" value="4.61658" />
                    <Key frame="140" value="4.61658" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="20" value="5.97106" />
                    <Key frame="60" value="5.97106" />
                    <Key frame="100" value="5.97106" />
                    <Key frame="140" value="5.97106" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="88.5" />
                    <Key frame="60" value="88.5" />
                    <Key frame="100" value="88.5" />
                    <Key frame="140" value="88.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="45.5" />
                    <Key frame="60" value="45.5" />
                    <Key frame="100" value="45.5" />
                    <Key frame="140" value="45.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="20" value="0.2998" />
                    <Key frame="60" value="0.2998" />
                    <Key frame="100" value="0.2998" />
                    <Key frame="140" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="20" value="6.78289" />
                    <Key frame="60" value="6.78289" />
                    <Key frame="100" value="6.78289" />
                    <Key frame="140" value="6.78289" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="20" value="-6.71728" />
                    <Key frame="60" value="-6.71728" />
                    <Key frame="100" value="-6.71728" />
                    <Key frame="140" value="-6.71728" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="20" value="-9.74084" />
                    <Key frame="60" value="-9.74084" />
                    <Key frame="100" value="-9.74084" />
                    <Key frame="140" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="20" value="-5.29" />
                    <Key frame="60" value="-5.29" />
                    <Key frame="100" value="-5.29" />
                    <Key frame="140" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="119.5" />
                    <Key frame="60" value="119.5" />
                    <Key frame="100" value="119.5" />
                    <Key frame="140" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="-26.8" />
                    <Key frame="60" value="-26.8" />
                    <Key frame="100" value="-26.8" />
                    <Key frame="140" value="-26.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="20" value="-8.51448" />
                    <Key frame="60" value="-8.51448" />
                    <Key frame="100" value="-8.51448" />
                    <Key frame="140" value="-8.51448" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="Après le tunel" id="15" localization="8" tooltip="" x="2018" y="0">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="15" start_frame="1" end_frame="300" size="300">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="59.4604">
                      <Box name="IntroduceHimself" id="4" localization="8" tooltip="" x="1124" y="212">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Veuillez aussi noter qu’après le tunnel, la visite n’est par terminée. Suivez les petits poissons sur le sol pour découvrir l’autre partie du monde marin. . Au final vous retrouverez notre vue subocéanique"
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="957" y="215">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="Wait (1)" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1297" y="214">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="4" />
                      <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="20" value="-18.2" />
                    <Key frame="60" value="-17.9" />
                    <Key frame="100" value="-18.2" />
                    <Key frame="140" value="-17.9" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="20" value="48.5" />
                    <Key frame="60" value="-37.4" />
                    <Key frame="100" value="48.5" />
                    <Key frame="140" value="-37.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="20" value="4.61659" />
                    <Key frame="60" value="4.61659" />
                    <Key frame="100" value="4.61659" />
                    <Key frame="140" value="4.61659" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="20" value="-5.97129" />
                    <Key frame="60" value="-5.97129" />
                    <Key frame="100" value="-5.97129" />
                    <Key frame="140" value="-5.97129" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="-79" />
                    <Key frame="60" value="-79" />
                    <Key frame="100" value="-79" />
                    <Key frame="140" value="-79" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="-46.8" />
                    <Key frame="60" value="-46.8" />
                    <Key frame="100" value="-46.8" />
                    <Key frame="140" value="-46.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="20" value="0.2998" />
                    <Key frame="60" value="0.2998" />
                    <Key frame="100" value="0.2998" />
                    <Key frame="140" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="20" value="6.78287" />
                    <Key frame="60" value="6.78287" />
                    <Key frame="100" value="6.78287" />
                    <Key frame="140" value="6.78287" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="20" value="6.71762" />
                    <Key frame="60" value="6.71762" />
                    <Key frame="100" value="6.71762" />
                    <Key frame="140" value="6.71762" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="20" value="-9.74084" />
                    <Key frame="60" value="-9.74084" />
                    <Key frame="100" value="-9.74084" />
                    <Key frame="140" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="20" value="-5.29" />
                    <Key frame="60" value="-5.29" />
                    <Key frame="100" value="-5.29" />
                    <Key frame="140" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="119.5" />
                    <Key frame="60" value="119.5" />
                    <Key frame="100" value="119.5" />
                    <Key frame="140" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="22.6" />
                    <Key frame="60" value="22.6" />
                    <Key frame="100" value="22.6" />
                    <Key frame="140" value="22.6" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="20" value="8.12719" />
                    <Key frame="60" value="8.12719" />
                    <Key frame="100" value="8.12719" />
                    <Key frame="140" value="8.12719" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="20" value="4.61658" />
                    <Key frame="60" value="4.61658" />
                    <Key frame="100" value="4.61658" />
                    <Key frame="140" value="4.61658" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="20" value="5.97106" />
                    <Key frame="60" value="5.97106" />
                    <Key frame="100" value="5.97106" />
                    <Key frame="140" value="5.97106" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="20" value="88.5" />
                    <Key frame="60" value="88.5" />
                    <Key frame="100" value="88.5" />
                    <Key frame="140" value="88.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="20" value="45.5" />
                    <Key frame="60" value="45.5" />
                    <Key frame="100" value="45.5" />
                    <Key frame="140" value="45.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="20" value="0.2998" />
                    <Key frame="60" value="0.2998" />
                    <Key frame="100" value="0.2998" />
                    <Key frame="140" value="0.2998" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="20" value="6.78289" />
                    <Key frame="60" value="6.78289" />
                    <Key frame="100" value="6.78289" />
                    <Key frame="140" value="6.78289" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="20" value="-6.71728" />
                    <Key frame="60" value="-6.71728" />
                    <Key frame="100" value="-6.71728" />
                    <Key frame="140" value="-6.71728" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="20" value="-9.74084" />
                    <Key frame="60" value="-9.74084" />
                    <Key frame="100" value="-9.74084" />
                    <Key frame="140" value="-9.74084" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="20" value="-5.29" />
                    <Key frame="60" value="-5.29" />
                    <Key frame="100" value="-5.29" />
                    <Key frame="140" value="-5.29" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="20" value="119.5" />
                    <Key frame="60" value="119.5" />
                    <Key frame="100" value="119.5" />
                    <Key frame="140" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="20" value="-26.8" />
                    <Key frame="60" value="-26.8" />
                    <Key frame="100" value="-26.8" />
                    <Key frame="140" value="-26.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="20" value="-8.51448" />
                    <Key frame="60" value="-8.51448" />
                    <Key frame="100" value="-8.51448" />
                    <Key frame="140" value="-8.51448" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="Set Language (2)" id="20" localization="8" tooltip="Set the language of your robot for the current application. Your robot will speak and understand the selected language as long as your application has focus. Any following call to ALSpeechRecognition (Speech Reco. box for instance), ALTextToSpeech (Say box for instance) or ALDialog will use this language.&#x0A;" plugin="setlanguage_plugin" x="224" y="284">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
# -*- coding: utf-8 -*-
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.setTTS = True
        self.setASR = True
        self.setDialog = True
        self.language = "French"

    def getService(self, serviceName, humainName):
        service = None
        try:
            service = self.session().service(serviceName)
        except:
            self.logger.warn("%s is not available, language setting cannot be applied to %s." % (serviceName, humainName))
        return service

    def onLoad(self):
        if self.setTTS:
            self.tts = self.getService("ALTextToSpeech", "speech")
        if self.setASR:
            self.asr = self.getService("ALSpeechRecognition", "recognition")
        if self.setDialog:
            self.dialog = self.getService("ALDialog", "dialog")

    def setLanguage(self, service, serviceName):
        try:
            if service is None:
                return False
            service.setLanguage(self.language)
            return True
        except Exception as e:
            self.logger.error("Could not set language %s for %s: %s" % (self.language, serviceName, e))
            return False

    def onInput_onSet(self):
        res = True
        if self.setTTS:
            res = self.setLanguage(self.tts, "ALTextToSpeech") and res
        if self.setASR:
            res = self.setLanguage(self.asr, "ALSpeechRecognition") and res
        if self.setDialog:
            res = self.setLanguage(self.dialog, "ALDialog") and res

        if res:
            self.onReady()
        else:
            self.logger.error("Language %s could not be set for one or more services." % self.language)
            self.onError()]]>
                </content>
              </script>
              <pluginContent>
                <language>French</language>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" />
              <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" />
              <Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="Error output:&#x0A;- triggered if the language asked cannot be set" id="4" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Set Speech Lang." id="30" localization="8" tooltip="Select the language you would like the robot to speak. Any following call to&#x0A;ALTextToSpeech (Say box for instance) will use this language." plugin="setlanguage_plugin" x="513" y="707">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[# /!\ Generated content. Do not edit!
# -*- coding: utf-8 -*-
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.setTTS = True
        self.setASR = False
        self.setDialog = False
        self.language = "English"

    def getService(self, serviceName, humainName):
        service = None
        try:
            service = self.session().service(serviceName)
        except:
            self.logger.warn("%s is not available, language setting cannot be applied to %s." % (serviceName, humainName))
        return service

    def onLoad(self):
        if self.setTTS:
            self.tts = self.getService("ALTextToSpeech", "speech")
        if self.setASR:
            self.asr = self.getService("ALSpeechRecognition", "recognition")
        if self.setDialog:
            self.dialog = self.getService("ALDialog", "dialog")

    def setLanguage(self, service, serviceName):
        try:
            if service is None:
                return False
            service.setLanguage(self.language)
            return True
        except Exception as e:
            self.logger.error("Could not set language %s for %s: %s" % (self.language, serviceName, e))
            return False

    def onInput_onSet(self):
        res = True
        if self.setTTS:
            res = self.setLanguage(self.tts, "ALTextToSpeech") and res
        if self.setASR:
            res = self.setLanguage(self.asr, "ALSpeechRecognition") and res
        if self.setDialog:
            res = self.setLanguage(self.dialog, "ALDialog") and res

        if res:
            self.onReady()
        else:
            self.logger.error("Language %s could not be set for one or more services." % self.language)
            self.onError()]]>
                </content>
              </script>
              <pluginContent>
                <language>English</language>
                <asr use="0" />
                <dialog use="0" />
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" />
              <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Animated Say (1)" id="32" localization="8" tooltip="Say some text with animations. The text can be localized." x="2295" y="121">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="et très important la roue des actions." default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="Move To" id="38" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="634" y="1031">
              <bitmap>media/images/box/movement/walk_forward.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        self.motion = self.session().service("ALMotion")

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
              <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
              <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.60241" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
              <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
              <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
              <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
              <Resource name="Legs" type="Lock" timeout="0" />
            </Box>
            <Box name="Thinking" id="41" localization="8" tooltip="ID : #02B 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Thinking" x="1017" y="0">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="140">
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="19" value="-6.5" />
                    <Key frame="31" value="12.8913" />
                    <Key frame="80" value="11.5" />
                    <Key frame="119" value="13.8" />
                    <Key frame="131" value="7.2" />
                    <Key frame="140" value="-11.9668" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="31" value="8.87482" />
                    <Key frame="119" value="9.00008" />
                    <Key frame="140" value="-17.4791" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0">
                    <Key frame="15" value="-2.34809" />
                    <Key frame="31" value="-12.3926" />
                    <Key frame="105" value="-19.9512" />
                    <Key frame="128" value="-2.48279" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0">
                    <Key frame="15" value="0" />
                    <Key frame="31" value="-3.25195" />
                    <Key frame="105" value="-2.02149" />
                    <Key frame="128" value="-0.197286" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0">
                    <Key frame="15" value="-0.634643" />
                    <Key frame="31" value="1.66993" />
                    <Key frame="105" value="4.30664" />
                    <Key frame="128" value="-0.742038" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="17" value="-45.8" />
                    <Key frame="29" value="-85.0768" />
                    <Key frame="117" value="-86.9" />
                    <Key frame="129" value="-87.9" />
                    <Key frame="138" value="-78.9185" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="17" value="-80.4" />
                    <Key frame="29" value="-54.7589" />
                    <Key frame="117" value="-52.1" />
                    <Key frame="138" value="-88.7261" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="17" value="0.96" />
                    <Key frame="29" value="0.7036" />
                    <Key frame="43" value="0.44" />
                    <Key frame="53" value="0.73" />
                    <Key frame="68" value="0.44" />
                    <Key frame="78" value="0.73" />
                    <Key frame="95" value="0.44" />
                    <Key frame="105" value="0.73" />
                    <Key frame="117" value="0.65" />
                    <Key frame="129" value="0.52" />
                    <Key frame="138" value="0.844074" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="29" value="-29.3582" />
                    <Key frame="117" value="-33.3" />
                    <Key frame="129" value="5.7" />
                    <Key frame="138" value="25.2371" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="29" value="18.8064" />
                    <Key frame="117" value="19.6" />
                    <Key frame="138" value="13.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="17" value="-51.3" />
                    <Key frame="29" value="-47.7276" />
                    <Key frame="117" value="-49.4001" />
                    <Key frame="138" value="1.10055" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="15" value="32.9" />
                    <Key frame="27" value="21.8875" />
                    <Key frame="115" value="11.6895" />
                    <Key frame="127" value="21.5" />
                    <Key frame="136" value="14.8333" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="15" value="84.7" />
                    <Key frame="27" value="70.7504" />
                    <Key frame="115" value="70.8398" />
                    <Key frame="136" value="69.9984" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="15" value="0.54" />
                    <Key frame="27" value="0.3504" />
                    <Key frame="115" value="0.510545" />
                    <Key frame="127" value="0.31" />
                    <Key frame="136" value="0.412984" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="27" value="88.6852" />
                    <Key frame="115" value="78.3984" />
                    <Key frame="136" value="82.2228" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="27" value="-6.24271" />
                    <Key frame="115" value="-4.92188" />
                    <Key frame="136" value="-6.87545" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="15" value="28.5" />
                    <Key frame="27" value="1.75543" />
                    <Key frame="115" value="5.35899" />
                    <Key frame="136" value="-1.90004" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
              <Resource name="Standing" type="Lock" timeout="1" />
              <Resource name="All motors" type="Lock" timeout="1" />
            </Box>
            <Box name="startBabyDynamicDanceCoordonate" id="33" localization="8" tooltip="" x="1408" y="1254">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="15" start_frame="1" end_frame="-1" size="120">
                <BehaviorLayer name="Legs_Layer">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Legs" id="12" localization="8" tooltip="" x="473" y="0">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="12" start_frame="1" end_frame="-1" size="330">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="10" value="-2.5" />
                              <Key frame="20" value="4.90817" />
                              <Key frame="30" value="-2.5" />
                              <Key frame="40" value="4.90817" />
                              <Key frame="50" value="-2.5" />
                              <Key frame="60" value="4.90817" />
                              <Key frame="70" value="-2.5" />
                              <Key frame="80" value="4.90817" />
                              <Key frame="90" value="-2.5" />
                              <Key frame="100" value="4.90817" />
                              <Key frame="110" value="-2.5" />
                              <Key frame="120" value="4.90817" />
                              <Key frame="130" value="-2.5" />
                              <Key frame="140" value="4.90817" />
                              <Key frame="150" value="-2.5" />
                              <Key frame="160" value="4.90817" />
                              <Key frame="170" value="-2.5" />
                              <Key frame="180" value="4.90817" />
                              <Key frame="190" value="-2.5" />
                              <Key frame="200" value="4.90817" />
                              <Key frame="210" value="-2.5" />
                              <Key frame="220" value="4.90817" />
                              <Key frame="230" value="-2.5" />
                              <Key frame="240" value="4.90817" />
                              <Key frame="250" value="-2.5" />
                              <Key frame="260" value="4.90817" />
                              <Key frame="270" value="-2.5" />
                              <Key frame="280" value="4.90817" />
                              <Key frame="290" value="-2.5" />
                              <Key frame="300" value="4.90817" />
                              <Key frame="310" value="-2.5" />
                              <Key frame="320" value="4.90817" />
                              <Key frame="330" value="4.9" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="10" value="-7" />
                              <Key frame="20" value="-6.13028" />
                              <Key frame="30" value="-7" />
                              <Key frame="40" value="-6.13028" />
                              <Key frame="50" value="-7" />
                              <Key frame="60" value="-6.13028" />
                              <Key frame="70" value="-7" />
                              <Key frame="80" value="-6.13028" />
                              <Key frame="90" value="-7" />
                              <Key frame="100" value="-6.13028" />
                              <Key frame="110" value="-7" />
                              <Key frame="120" value="-6.13028" />
                              <Key frame="130" value="-7" />
                              <Key frame="140" value="-6.13028" />
                              <Key frame="150" value="-7" />
                              <Key frame="160" value="-6.13028" />
                              <Key frame="170" value="-7" />
                              <Key frame="180" value="-6.13028" />
                              <Key frame="190" value="-7" />
                              <Key frame="200" value="-6.13028" />
                              <Key frame="210" value="-7" />
                              <Key frame="220" value="-6.13028" />
                              <Key frame="230" value="-7" />
                              <Key frame="240" value="-6.13028" />
                              <Key frame="250" value="-7" />
                              <Key frame="260" value="-6.13028" />
                              <Key frame="270" value="-7" />
                              <Key frame="280" value="-6.13028" />
                              <Key frame="290" value="-7" />
                              <Key frame="300" value="-6.13028" />
                              <Key frame="310" value="-7" />
                              <Key frame="320" value="-6.13028" />
                              <Key frame="330" value="-5.35316" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="10" value="-16.4" />
                              <Key frame="20" value="7.16779" />
                              <Key frame="30" value="-16.4" />
                              <Key frame="40" value="7.16779" />
                              <Key frame="50" value="-16.4" />
                              <Key frame="60" value="7.16779" />
                              <Key frame="70" value="-16.4" />
                              <Key frame="80" value="7.16779" />
                              <Key frame="90" value="-16.4" />
                              <Key frame="100" value="7.16779" />
                              <Key frame="110" value="-16.4" />
                              <Key frame="120" value="7.16779" />
                              <Key frame="130" value="-16.4" />
                              <Key frame="140" value="7.16779" />
                              <Key frame="150" value="-16.4" />
                              <Key frame="160" value="7.16779" />
                              <Key frame="170" value="-16.4" />
                              <Key frame="180" value="7.16779" />
                              <Key frame="190" value="-16.4" />
                              <Key frame="200" value="7.16779" />
                              <Key frame="210" value="-16.4" />
                              <Key frame="220" value="7.16779" />
                              <Key frame="230" value="-16.4" />
                              <Key frame="240" value="7.16779" />
                              <Key frame="250" value="-16.4" />
                              <Key frame="260" value="7.16779" />
                              <Key frame="270" value="-16.4" />
                              <Key frame="280" value="7.16779" />
                              <Key frame="290" value="-16.4" />
                              <Key frame="300" value="7.16779" />
                              <Key frame="310" value="-16.4" />
                              <Key frame="320" value="7.16779" />
                              <Key frame="330" value="-22" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="10" value="7.27906" />
                              <Key frame="20" value="7.27906" />
                              <Key frame="30" value="7.27906" />
                              <Key frame="40" value="7.27906" />
                              <Key frame="50" value="7.27906" />
                              <Key frame="60" value="7.27906" />
                              <Key frame="70" value="7.27906" />
                              <Key frame="80" value="7.27906" />
                              <Key frame="90" value="7.27906" />
                              <Key frame="100" value="7.27906" />
                              <Key frame="110" value="7.27906" />
                              <Key frame="120" value="7.27906" />
                              <Key frame="130" value="7.27906" />
                              <Key frame="140" value="7.27906" />
                              <Key frame="150" value="7.27906" />
                              <Key frame="160" value="7.27906" />
                              <Key frame="170" value="7.27906" />
                              <Key frame="180" value="7.27906" />
                              <Key frame="190" value="7.27906" />
                              <Key frame="200" value="7.27906" />
                              <Key frame="210" value="7.27906" />
                              <Key frame="220" value="7.27906" />
                              <Key frame="230" value="7.27906" />
                              <Key frame="240" value="7.27906" />
                              <Key frame="250" value="7.27906" />
                              <Key frame="260" value="7.27906" />
                              <Key frame="270" value="7.27906" />
                              <Key frame="280" value="7.27906" />
                              <Key frame="290" value="7.27906" />
                              <Key frame="300" value="7.27906" />
                              <Key frame="310" value="7.27906" />
                              <Key frame="320" value="7.27906" />
                              <Key frame="330" value="4.59747" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="10" value="-10.0384" />
                              <Key frame="20" value="-10.0384" />
                              <Key frame="30" value="-10.0384" />
                              <Key frame="40" value="-10.0384" />
                              <Key frame="50" value="-10.0384" />
                              <Key frame="60" value="-10.0384" />
                              <Key frame="70" value="-10.0384" />
                              <Key frame="80" value="-10.0384" />
                              <Key frame="90" value="-10.0384" />
                              <Key frame="100" value="-10.0384" />
                              <Key frame="110" value="-10.0384" />
                              <Key frame="120" value="-10.0384" />
                              <Key frame="130" value="-10.0384" />
                              <Key frame="140" value="-10.0384" />
                              <Key frame="150" value="-10.0384" />
                              <Key frame="160" value="-10.0384" />
                              <Key frame="170" value="-10.0384" />
                              <Key frame="180" value="-10.0384" />
                              <Key frame="190" value="-10.0384" />
                              <Key frame="200" value="-10.0384" />
                              <Key frame="210" value="-10.0384" />
                              <Key frame="220" value="-10.0384" />
                              <Key frame="230" value="-10.0384" />
                              <Key frame="240" value="-10.0384" />
                              <Key frame="250" value="-10.0384" />
                              <Key frame="260" value="-10.0384" />
                              <Key frame="270" value="-10.0384" />
                              <Key frame="280" value="-10.0384" />
                              <Key frame="290" value="-10.0384" />
                              <Key frame="300" value="-10.0384" />
                              <Key frame="310" value="-10.0384" />
                              <Key frame="320" value="-10.0384" />
                              <Key frame="330" value="-16.2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="10" value="13.9" />
                              <Key frame="20" value="-5.16244" />
                              <Key frame="30" value="13.9" />
                              <Key frame="40" value="-5.16244" />
                              <Key frame="50" value="13.9" />
                              <Key frame="60" value="-5.16244" />
                              <Key frame="70" value="13.9" />
                              <Key frame="80" value="-5.16244" />
                              <Key frame="90" value="13.9" />
                              <Key frame="100" value="-5.16244" />
                              <Key frame="110" value="13.9" />
                              <Key frame="120" value="-5.16244" />
                              <Key frame="130" value="13.9" />
                              <Key frame="140" value="-5.16244" />
                              <Key frame="150" value="13.9" />
                              <Key frame="160" value="-5.16244" />
                              <Key frame="170" value="13.9" />
                              <Key frame="180" value="-5.16244" />
                              <Key frame="190" value="13.9" />
                              <Key frame="200" value="-5.16244" />
                              <Key frame="210" value="13.9" />
                              <Key frame="220" value="-5.16244" />
                              <Key frame="230" value="13.9" />
                              <Key frame="240" value="-5.16244" />
                              <Key frame="250" value="13.9" />
                              <Key frame="260" value="-5.16244" />
                              <Key frame="270" value="13.9" />
                              <Key frame="280" value="-5.16244" />
                              <Key frame="290" value="13.9" />
                              <Key frame="300" value="-5.16244" />
                              <Key frame="310" value="13.9" />
                              <Key frame="320" value="-5.16244" />
                              <Key frame="330" value="17.6" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="10" value="-2.5" />
                              <Key frame="20" value="5.48845" />
                              <Key frame="30" value="-2.5" />
                              <Key frame="40" value="5.48845" />
                              <Key frame="50" value="-2.5" />
                              <Key frame="60" value="5.48845" />
                              <Key frame="70" value="-2.5" />
                              <Key frame="80" value="5.48845" />
                              <Key frame="90" value="-2.5" />
                              <Key frame="100" value="5.48845" />
                              <Key frame="110" value="-2.5" />
                              <Key frame="120" value="5.48845" />
                              <Key frame="130" value="-2.5" />
                              <Key frame="140" value="5.48845" />
                              <Key frame="150" value="-2.5" />
                              <Key frame="160" value="5.48845" />
                              <Key frame="170" value="-2.5" />
                              <Key frame="180" value="5.48845" />
                              <Key frame="190" value="-2.5" />
                              <Key frame="200" value="5.48845" />
                              <Key frame="210" value="-2.5" />
                              <Key frame="220" value="5.48845" />
                              <Key frame="230" value="-2.5" />
                              <Key frame="240" value="5.48845" />
                              <Key frame="250" value="-2.5" />
                              <Key frame="260" value="5.48845" />
                              <Key frame="270" value="-2.5" />
                              <Key frame="280" value="5.48845" />
                              <Key frame="290" value="-2.5" />
                              <Key frame="300" value="5.48845" />
                              <Key frame="310" value="-2.5" />
                              <Key frame="320" value="5.48845" />
                              <Key frame="330" value="4.9" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="10" value="7" />
                              <Key frame="20" value="6.13005" />
                              <Key frame="30" value="7" />
                              <Key frame="40" value="6.13005" />
                              <Key frame="50" value="7" />
                              <Key frame="60" value="6.13005" />
                              <Key frame="70" value="7" />
                              <Key frame="80" value="6.13005" />
                              <Key frame="90" value="7" />
                              <Key frame="100" value="6.13005" />
                              <Key frame="110" value="7" />
                              <Key frame="120" value="6.13005" />
                              <Key frame="130" value="7" />
                              <Key frame="140" value="6.13005" />
                              <Key frame="150" value="7" />
                              <Key frame="160" value="6.13005" />
                              <Key frame="170" value="7" />
                              <Key frame="180" value="6.13005" />
                              <Key frame="190" value="7" />
                              <Key frame="200" value="6.13005" />
                              <Key frame="210" value="7" />
                              <Key frame="220" value="6.13005" />
                              <Key frame="230" value="7" />
                              <Key frame="240" value="6.13005" />
                              <Key frame="250" value="7" />
                              <Key frame="260" value="6.13005" />
                              <Key frame="270" value="7" />
                              <Key frame="280" value="6.13005" />
                              <Key frame="290" value="7" />
                              <Key frame="300" value="6.13005" />
                              <Key frame="310" value="7" />
                              <Key frame="320" value="6.13005" />
                              <Key frame="330" value="6.15042" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="10" value="-16.4" />
                              <Key frame="20" value="7.1678" />
                              <Key frame="30" value="-16.4" />
                              <Key frame="40" value="7.1678" />
                              <Key frame="50" value="-16.4" />
                              <Key frame="60" value="7.1678" />
                              <Key frame="70" value="-16.4" />
                              <Key frame="80" value="7.1678" />
                              <Key frame="90" value="-16.4" />
                              <Key frame="100" value="7.1678" />
                              <Key frame="110" value="-16.4" />
                              <Key frame="120" value="7.1678" />
                              <Key frame="130" value="-16.4" />
                              <Key frame="140" value="7.1678" />
                              <Key frame="150" value="-16.4" />
                              <Key frame="160" value="7.1678" />
                              <Key frame="170" value="-16.4" />
                              <Key frame="180" value="7.1678" />
                              <Key frame="190" value="-16.4" />
                              <Key frame="200" value="7.1678" />
                              <Key frame="210" value="-16.4" />
                              <Key frame="220" value="7.1678" />
                              <Key frame="230" value="-16.4" />
                              <Key frame="240" value="7.1678" />
                              <Key frame="250" value="-16.4" />
                              <Key frame="260" value="7.1678" />
                              <Key frame="270" value="-16.4" />
                              <Key frame="280" value="7.1678" />
                              <Key frame="290" value="-16.4" />
                              <Key frame="300" value="7.1678" />
                              <Key frame="310" value="-16.4" />
                              <Key frame="320" value="7.1678" />
                              <Key frame="330" value="-22" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="10" value="-7.27878" />
                              <Key frame="20" value="-7.27878" />
                              <Key frame="30" value="-7.27878" />
                              <Key frame="40" value="-7.27878" />
                              <Key frame="50" value="-7.27878" />
                              <Key frame="60" value="-7.27878" />
                              <Key frame="70" value="-7.27878" />
                              <Key frame="80" value="-7.27878" />
                              <Key frame="90" value="-7.27878" />
                              <Key frame="100" value="-7.27878" />
                              <Key frame="110" value="-7.27878" />
                              <Key frame="120" value="-7.27878" />
                              <Key frame="130" value="-7.27878" />
                              <Key frame="140" value="-7.27878" />
                              <Key frame="150" value="-7.27878" />
                              <Key frame="160" value="-7.27878" />
                              <Key frame="170" value="-7.27878" />
                              <Key frame="180" value="-7.27878" />
                              <Key frame="190" value="-7.27878" />
                              <Key frame="200" value="-7.27878" />
                              <Key frame="210" value="-7.27878" />
                              <Key frame="220" value="-7.27878" />
                              <Key frame="230" value="-7.27878" />
                              <Key frame="240" value="-7.27878" />
                              <Key frame="250" value="-7.27878" />
                              <Key frame="260" value="-7.27878" />
                              <Key frame="270" value="-7.27878" />
                              <Key frame="280" value="-7.27878" />
                              <Key frame="290" value="-7.27878" />
                              <Key frame="300" value="-7.27878" />
                              <Key frame="310" value="-7.27878" />
                              <Key frame="320" value="-7.27878" />
                              <Key frame="330" value="-6.56345" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="10" value="-10.0384" />
                              <Key frame="20" value="-10.0384" />
                              <Key frame="30" value="-10.0384" />
                              <Key frame="40" value="-10.0384" />
                              <Key frame="50" value="-10.0384" />
                              <Key frame="60" value="-10.0384" />
                              <Key frame="70" value="-10.0384" />
                              <Key frame="80" value="-10.0384" />
                              <Key frame="90" value="-10.0384" />
                              <Key frame="100" value="-10.0384" />
                              <Key frame="110" value="-10.0384" />
                              <Key frame="120" value="-10.0384" />
                              <Key frame="130" value="-10.0384" />
                              <Key frame="140" value="-10.0384" />
                              <Key frame="150" value="-10.0384" />
                              <Key frame="160" value="-10.0384" />
                              <Key frame="170" value="-10.0384" />
                              <Key frame="180" value="-10.0384" />
                              <Key frame="190" value="-10.0384" />
                              <Key frame="200" value="-10.0384" />
                              <Key frame="210" value="-10.0384" />
                              <Key frame="220" value="-10.0384" />
                              <Key frame="230" value="-10.0384" />
                              <Key frame="240" value="-10.0384" />
                              <Key frame="250" value="-10.0384" />
                              <Key frame="260" value="-10.0384" />
                              <Key frame="270" value="-10.0384" />
                              <Key frame="280" value="-10.0384" />
                              <Key frame="290" value="-10.0384" />
                              <Key frame="300" value="-10.0384" />
                              <Key frame="310" value="-10.0384" />
                              <Key frame="320" value="-10.0384" />
                              <Key frame="330" value="-16.2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="10" value="13.9" />
                              <Key frame="20" value="-5.16244" />
                              <Key frame="30" value="13.9" />
                              <Key frame="40" value="-5.16244" />
                              <Key frame="50" value="13.9" />
                              <Key frame="60" value="-5.16244" />
                              <Key frame="70" value="13.9" />
                              <Key frame="80" value="-5.16244" />
                              <Key frame="90" value="13.9" />
                              <Key frame="100" value="-5.16244" />
                              <Key frame="110" value="13.9" />
                              <Key frame="120" value="-5.16244" />
                              <Key frame="130" value="13.9" />
                              <Key frame="140" value="-5.16244" />
                              <Key frame="150" value="13.9" />
                              <Key frame="160" value="-5.16244" />
                              <Key frame="170" value="13.9" />
                              <Key frame="180" value="-5.16244" />
                              <Key frame="190" value="13.9" />
                              <Key frame="200" value="-5.16244" />
                              <Key frame="210" value="13.9" />
                              <Key frame="220" value="-5.16244" />
                              <Key frame="230" value="13.9" />
                              <Key frame="240" value="-5.16244" />
                              <Key frame="250" value="13.9" />
                              <Key frame="260" value="-5.16244" />
                              <Key frame="270" value="13.9" />
                              <Key frame="280" value="-5.16244" />
                              <Key frame="290" value="13.9" />
                              <Key frame="300" value="-5.16244" />
                              <Key frame="310" value="13.9" />
                              <Key frame="320" value="-5.16244" />
                              <Key frame="330" value="17.6" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="10" value="-4.4" />
                    <Key frame="20" value="16" />
                    <Key frame="30" value="-4.4" />
                    <Key frame="40" value="16" />
                    <Key frame="50" value="-4.4" />
                    <Key frame="60" value="16.3" />
                    <Key frame="70" value="-4.8" />
                    <Key frame="80" value="16.3" />
                    <Key frame="90" value="-4.8" />
                    <Key frame="100" value="16.3" />
                    <Key frame="110" value="16.3" />
                    <Key frame="120" value="-4.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="10" value="1" />
                    <Key frame="30" value="1" />
                    <Key frame="50" value="1" />
                    <Key frame="60" value="1" />
                    <Key frame="70" value="1" />
                    <Key frame="80" value="1" />
                    <Key frame="90" value="1" />
                    <Key frame="100" value="1" />
                    <Key frame="110" value="1" />
                    <Key frame="120" value="1" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="60" value="-79.5" />
                    <Key frame="70" value="-79.5" />
                    <Key frame="80" value="-79.5" />
                    <Key frame="90" value="-79.5" />
                    <Key frame="100" value="-79.5" />
                    <Key frame="110" value="-79.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="10" value="-3.4" />
                    <Key frame="20" value="-3.4" />
                    <Key frame="30" value="-3.4" />
                    <Key frame="40" value="-3.4" />
                    <Key frame="50" value="-3.4" />
                    <Key frame="60" value="-43.5" />
                    <Key frame="70" value="-43.5" />
                    <Key frame="80" value="-43.5" />
                    <Key frame="90" value="-43.5" />
                    <Key frame="100" value="-43.5" />
                    <Key frame="110" value="-43.5" />
                    <Key frame="120" value="-3.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="10" value="0" />
                    <Key frame="20" value="1" />
                    <Key frame="30" value="0" />
                    <Key frame="40" value="1" />
                    <Key frame="50" value="0" />
                    <Key frame="60" value="0.29" />
                    <Key frame="70" value="0.29" />
                    <Key frame="80" value="0.29" />
                    <Key frame="90" value="0.29" />
                    <Key frame="100" value="0.29" />
                    <Key frame="110" value="0.29" />
                    <Key frame="120" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="10" value="11.7" />
                    <Key frame="20" value="11.7" />
                    <Key frame="30" value="11.7" />
                    <Key frame="40" value="11.7" />
                    <Key frame="50" value="11.7" />
                    <Key frame="60" value="101.3" />
                    <Key frame="70" value="101.3" />
                    <Key frame="80" value="101.3" />
                    <Key frame="90" value="101.3" />
                    <Key frame="100" value="101.3" />
                    <Key frame="110" value="101.3" />
                    <Key frame="120" value="11.7" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="10" value="-18" />
                    <Key frame="20" value="-18" />
                    <Key frame="30" value="-18" />
                    <Key frame="40" value="-18" />
                    <Key frame="50" value="-18" />
                    <Key frame="60" value="23.9" />
                    <Key frame="70" value="23.9" />
                    <Key frame="80" value="23.9" />
                    <Key frame="90" value="23.9" />
                    <Key frame="100" value="23.9" />
                    <Key frame="110" value="23.9" />
                    <Key frame="120" value="-18" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="10" value="88.5" />
                    <Key frame="20" value="88.5" />
                    <Key frame="30" value="88.5" />
                    <Key frame="40" value="88.5" />
                    <Key frame="50" value="88.5" />
                    <Key frame="60" value="88.5" />
                    <Key frame="70" value="88.5" />
                    <Key frame="80" value="88.5" />
                    <Key frame="90" value="88.5" />
                    <Key frame="100" value="88.5" />
                    <Key frame="110" value="88.5" />
                    <Key frame="120" value="88.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="10" value="35.4" />
                    <Key frame="20" value="35.4" />
                    <Key frame="30" value="35.4" />
                    <Key frame="40" value="35.4" />
                    <Key frame="50" value="35.4" />
                    <Key frame="60" value="0.1" />
                    <Key frame="70" value="0.1" />
                    <Key frame="80" value="0.1" />
                    <Key frame="90" value="0.1" />
                    <Key frame="100" value="0.1" />
                    <Key frame="110" value="0.1" />
                    <Key frame="120" value="35.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="10" value="0" />
                    <Key frame="20" value="0" />
                    <Key frame="30" value="0" />
                    <Key frame="40" value="0" />
                    <Key frame="50" value="0" />
                    <Key frame="60" value="1" />
                    <Key frame="70" value="0" />
                    <Key frame="80" value="1" />
                    <Key frame="90" value="0" />
                    <Key frame="100" value="1" />
                    <Key frame="110" value="1" />
                    <Key frame="120" value="0" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="10" value="119.5" />
                    <Key frame="20" value="119.5" />
                    <Key frame="30" value="119.5" />
                    <Key frame="40" value="119.5" />
                    <Key frame="50" value="119.5" />
                    <Key frame="60" value="12.7" />
                    <Key frame="70" value="12.7" />
                    <Key frame="80" value="12.7" />
                    <Key frame="90" value="12.7" />
                    <Key frame="100" value="12.7" />
                    <Key frame="110" value="12.7" />
                    <Key frame="120" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="10" value="-16.5" />
                    <Key frame="20" value="-16.5" />
                    <Key frame="30" value="-16.5" />
                    <Key frame="40" value="-16.5" />
                    <Key frame="50" value="-16.5" />
                    <Key frame="60" value="18" />
                    <Key frame="70" value="18" />
                    <Key frame="80" value="18" />
                    <Key frame="90" value="18" />
                    <Key frame="100" value="18" />
                    <Key frame="110" value="18" />
                    <Key frame="120" value="-16.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="10" value="-31" />
                    <Key frame="20" value="-31" />
                    <Key frame="30" value="-31" />
                    <Key frame="40" value="-31" />
                    <Key frame="50" value="-31" />
                    <Key frame="60" value="-31" />
                    <Key frame="70" value="-31" />
                    <Key frame="80" value="-31" />
                    <Key frame="90" value="-31" />
                    <Key frame="100" value="-31" />
                    <Key frame="110" value="-31" />
                    <Key frame="120" value="-31" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="LegsV2" id="35" localization="8" tooltip="" x="1754" y="1186">
              <bitmap>media/images/box/box-timeLine.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="15" start_frame="1" end_frame="-1" size="320">
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="10" value="4.9" />
                    <Key frame="20" value="4.90817" />
                    <Key frame="30" value="4.9" />
                    <Key frame="40" value="4.90817" />
                    <Key frame="50" value="4.9" />
                    <Key frame="60" value="4.90817" />
                    <Key frame="70" value="4.9" />
                    <Key frame="80" value="4.90817" />
                    <Key frame="90" value="4.9" />
                    <Key frame="100" value="4.90817" />
                    <Key frame="110" value="4.9" />
                    <Key frame="120" value="4.90817" />
                    <Key frame="130" value="4.9" />
                    <Key frame="140" value="4.90817" />
                    <Key frame="150" value="4.9" />
                    <Key frame="160" value="4.90817" />
                    <Key frame="170" value="4.9" />
                    <Key frame="180" value="4.90817" />
                    <Key frame="190" value="4.9" />
                    <Key frame="200" value="4.90817" />
                    <Key frame="210" value="4.9" />
                    <Key frame="220" value="4.90817" />
                    <Key frame="230" value="4.9" />
                    <Key frame="240" value="4.90817" />
                    <Key frame="250" value="4.9" />
                    <Key frame="260" value="4.90817" />
                    <Key frame="270" value="4.9" />
                    <Key frame="280" value="4.90817" />
                    <Key frame="290" value="4.9" />
                    <Key frame="300" value="4.90817" />
                    <Key frame="310" value="4.9" />
                    <Key frame="320" value="4.90817" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="10" value="-5.35316" />
                    <Key frame="20" value="-6.13028" />
                    <Key frame="30" value="-5.35316" />
                    <Key frame="40" value="-6.13028" />
                    <Key frame="50" value="-5.35316" />
                    <Key frame="60" value="-6.13028" />
                    <Key frame="70" value="-5.35316" />
                    <Key frame="80" value="-6.13028" />
                    <Key frame="90" value="-5.35316" />
                    <Key frame="100" value="-6.13028" />
                    <Key frame="110" value="-5.35316" />
                    <Key frame="120" value="-6.13028" />
                    <Key frame="130" value="-5.35316" />
                    <Key frame="140" value="-6.13028" />
                    <Key frame="150" value="-5.35316" />
                    <Key frame="160" value="-6.13028" />
                    <Key frame="170" value="-5.35316" />
                    <Key frame="180" value="-6.13028" />
                    <Key frame="190" value="-5.35316" />
                    <Key frame="200" value="-6.13028" />
                    <Key frame="210" value="-5.35316" />
                    <Key frame="220" value="-6.13028" />
                    <Key frame="230" value="-5.35316" />
                    <Key frame="240" value="-6.13028" />
                    <Key frame="250" value="-5.35316" />
                    <Key frame="260" value="-6.13028" />
                    <Key frame="270" value="-5.35316" />
                    <Key frame="280" value="-6.13028" />
                    <Key frame="290" value="-5.35316" />
                    <Key frame="300" value="-6.13028" />
                    <Key frame="310" value="-5.35316" />
                    <Key frame="320" value="-6.13028" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="10" value="-22" />
                    <Key frame="20" value="7.16779" />
                    <Key frame="30" value="-22" />
                    <Key frame="40" value="7.16779" />
                    <Key frame="50" value="-22" />
                    <Key frame="60" value="7.16779" />
                    <Key frame="70" value="-22" />
                    <Key frame="80" value="7.16779" />
                    <Key frame="90" value="-22" />
                    <Key frame="100" value="7.16779" />
                    <Key frame="110" value="-22" />
                    <Key frame="120" value="7.16779" />
                    <Key frame="130" value="-22" />
                    <Key frame="140" value="7.16779" />
                    <Key frame="150" value="-22" />
                    <Key frame="160" value="7.16779" />
                    <Key frame="170" value="-22" />
                    <Key frame="180" value="7.16779" />
                    <Key frame="190" value="-22" />
                    <Key frame="200" value="7.16779" />
                    <Key frame="210" value="-22" />
                    <Key frame="220" value="7.16779" />
                    <Key frame="230" value="-22" />
                    <Key frame="240" value="7.16779" />
                    <Key frame="250" value="-22" />
                    <Key frame="260" value="7.16779" />
                    <Key frame="270" value="-22" />
                    <Key frame="280" value="7.16779" />
                    <Key frame="290" value="-22" />
                    <Key frame="300" value="7.16779" />
                    <Key frame="310" value="-22" />
                    <Key frame="320" value="7.16779" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="10" value="4.59747" />
                    <Key frame="20" value="7.27906" />
                    <Key frame="30" value="4.59747" />
                    <Key frame="40" value="7.27906" />
                    <Key frame="50" value="4.59747" />
                    <Key frame="60" value="7.27906" />
                    <Key frame="70" value="4.59747" />
                    <Key frame="80" value="7.27906" />
                    <Key frame="90" value="4.59747" />
                    <Key frame="100" value="7.27906" />
                    <Key frame="110" value="4.59747" />
                    <Key frame="120" value="7.27906" />
                    <Key frame="130" value="4.59747" />
                    <Key frame="140" value="7.27906" />
                    <Key frame="150" value="4.59747" />
                    <Key frame="160" value="7.27906" />
                    <Key frame="170" value="4.59747" />
                    <Key frame="180" value="7.27906" />
                    <Key frame="190" value="4.59747" />
                    <Key frame="200" value="7.27906" />
                    <Key frame="210" value="4.59747" />
                    <Key frame="220" value="7.27906" />
                    <Key frame="230" value="4.59747" />
                    <Key frame="240" value="7.27906" />
                    <Key frame="250" value="4.59747" />
                    <Key frame="260" value="7.27906" />
                    <Key frame="270" value="4.59747" />
                    <Key frame="280" value="7.27906" />
                    <Key frame="290" value="4.59747" />
                    <Key frame="300" value="7.27906" />
                    <Key frame="310" value="4.59747" />
                    <Key frame="320" value="7.27906" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="10" value="-16.2" />
                    <Key frame="20" value="-10.0384" />
                    <Key frame="30" value="-16.2" />
                    <Key frame="40" value="-10.0384" />
                    <Key frame="50" value="-16.2" />
                    <Key frame="60" value="-10.0384" />
                    <Key frame="70" value="-16.2" />
                    <Key frame="80" value="-10.0384" />
                    <Key frame="90" value="-16.2" />
                    <Key frame="100" value="-10.0384" />
                    <Key frame="110" value="-16.2" />
                    <Key frame="120" value="-10.0384" />
                    <Key frame="130" value="-16.2" />
                    <Key frame="140" value="-10.0384" />
                    <Key frame="150" value="-16.2" />
                    <Key frame="160" value="-10.0384" />
                    <Key frame="170" value="-16.2" />
                    <Key frame="180" value="-10.0384" />
                    <Key frame="190" value="-16.2" />
                    <Key frame="200" value="-10.0384" />
                    <Key frame="210" value="-16.2" />
                    <Key frame="220" value="-10.0384" />
                    <Key frame="230" value="-16.2" />
                    <Key frame="240" value="-10.0384" />
                    <Key frame="250" value="-16.2" />
                    <Key frame="260" value="-10.0384" />
                    <Key frame="270" value="-16.2" />
                    <Key frame="280" value="-10.0384" />
                    <Key frame="290" value="-16.2" />
                    <Key frame="300" value="-10.0384" />
                    <Key frame="310" value="-16.2" />
                    <Key frame="320" value="-10.0384" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="10" value="17.6" />
                    <Key frame="20" value="-5.16244" />
                    <Key frame="30" value="17.6" />
                    <Key frame="40" value="-5.16244" />
                    <Key frame="50" value="17.6" />
                    <Key frame="60" value="-5.16244" />
                    <Key frame="70" value="17.6" />
                    <Key frame="80" value="-5.16244" />
                    <Key frame="90" value="17.6" />
                    <Key frame="100" value="-5.16244" />
                    <Key frame="110" value="17.6" />
                    <Key frame="120" value="-5.16244" />
                    <Key frame="130" value="17.6" />
                    <Key frame="140" value="-5.16244" />
                    <Key frame="150" value="17.6" />
                    <Key frame="160" value="-5.16244" />
                    <Key frame="170" value="17.6" />
                    <Key frame="180" value="-5.16244" />
                    <Key frame="190" value="17.6" />
                    <Key frame="200" value="-5.16244" />
                    <Key frame="210" value="17.6" />
                    <Key frame="220" value="-5.16244" />
                    <Key frame="230" value="17.6" />
                    <Key frame="240" value="-5.16244" />
                    <Key frame="250" value="17.6" />
                    <Key frame="260" value="-5.16244" />
                    <Key frame="270" value="17.6" />
                    <Key frame="280" value="-5.16244" />
                    <Key frame="290" value="17.6" />
                    <Key frame="300" value="-5.16244" />
                    <Key frame="310" value="17.6" />
                    <Key frame="320" value="-5.16244" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="10" value="4.9" />
                    <Key frame="20" value="5.48845" />
                    <Key frame="30" value="4.9" />
                    <Key frame="40" value="5.48845" />
                    <Key frame="50" value="4.9" />
                    <Key frame="60" value="5.48845" />
                    <Key frame="70" value="4.9" />
                    <Key frame="80" value="5.48845" />
                    <Key frame="90" value="4.9" />
                    <Key frame="100" value="5.48845" />
                    <Key frame="110" value="4.9" />
                    <Key frame="120" value="5.48845" />
                    <Key frame="130" value="4.9" />
                    <Key frame="140" value="5.48845" />
                    <Key frame="150" value="4.9" />
                    <Key frame="160" value="5.48845" />
                    <Key frame="170" value="4.9" />
                    <Key frame="180" value="5.48845" />
                    <Key frame="190" value="4.9" />
                    <Key frame="200" value="5.48845" />
                    <Key frame="210" value="4.9" />
                    <Key frame="220" value="5.48845" />
                    <Key frame="230" value="4.9" />
                    <Key frame="240" value="5.48845" />
                    <Key frame="250" value="4.9" />
                    <Key frame="260" value="5.48845" />
                    <Key frame="270" value="4.9" />
                    <Key frame="280" value="5.48845" />
                    <Key frame="290" value="4.9" />
                    <Key frame="300" value="5.48845" />
                    <Key frame="310" value="4.9" />
                    <Key frame="320" value="5.48845" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="10" value="6.15042" />
                    <Key frame="20" value="6.13005" />
                    <Key frame="30" value="6.15042" />
                    <Key frame="40" value="6.13005" />
                    <Key frame="50" value="6.15042" />
                    <Key frame="60" value="6.13005" />
                    <Key frame="70" value="6.15042" />
                    <Key frame="80" value="6.13005" />
                    <Key frame="90" value="6.15042" />
                    <Key frame="100" value="6.13005" />
                    <Key frame="110" value="6.15042" />
                    <Key frame="120" value="6.13005" />
                    <Key frame="130" value="6.15042" />
                    <Key frame="140" value="6.13005" />
                    <Key frame="150" value="6.15042" />
                    <Key frame="160" value="6.13005" />
                    <Key frame="170" value="6.15042" />
                    <Key frame="180" value="6.13005" />
                    <Key frame="190" value="6.15042" />
                    <Key frame="200" value="6.13005" />
                    <Key frame="210" value="6.15042" />
                    <Key frame="220" value="6.13005" />
                    <Key frame="230" value="6.15042" />
                    <Key frame="240" value="6.13005" />
                    <Key frame="250" value="6.15042" />
                    <Key frame="260" value="6.13005" />
                    <Key frame="270" value="6.15042" />
                    <Key frame="280" value="6.13005" />
                    <Key frame="290" value="6.15042" />
                    <Key frame="300" value="6.13005" />
                    <Key frame="310" value="6.15042" />
                    <Key frame="320" value="6.13005" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="10" value="-22" />
                    <Key frame="20" value="7.1678" />
                    <Key frame="30" value="-22" />
                    <Key frame="40" value="7.1678" />
                    <Key frame="50" value="-22" />
                    <Key frame="60" value="7.1678" />
                    <Key frame="70" value="-22" />
                    <Key frame="80" value="7.1678" />
                    <Key frame="90" value="-22" />
                    <Key frame="100" value="7.1678" />
                    <Key frame="110" value="-22" />
                    <Key frame="120" value="7.1678" />
                    <Key frame="130" value="-22" />
                    <Key frame="140" value="7.1678" />
                    <Key frame="150" value="-22" />
                    <Key frame="160" value="7.1678" />
                    <Key frame="170" value="-22" />
                    <Key frame="180" value="7.1678" />
                    <Key frame="190" value="-22" />
                    <Key frame="200" value="7.1678" />
                    <Key frame="210" value="-22" />
                    <Key frame="220" value="7.1678" />
                    <Key frame="230" value="-22" />
                    <Key frame="240" value="7.1678" />
                    <Key frame="250" value="-22" />
                    <Key frame="260" value="7.1678" />
                    <Key frame="270" value="-22" />
                    <Key frame="280" value="7.1678" />
                    <Key frame="290" value="-22" />
                    <Key frame="300" value="7.1678" />
                    <Key frame="310" value="-22" />
                    <Key frame="320" value="7.1678" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="10" value="-6.56345" />
                    <Key frame="20" value="-7.27878" />
                    <Key frame="30" value="-6.56345" />
                    <Key frame="40" value="-7.27878" />
                    <Key frame="50" value="-6.56345" />
                    <Key frame="60" value="-7.27878" />
                    <Key frame="70" value="-6.56345" />
                    <Key frame="80" value="-7.27878" />
                    <Key frame="90" value="-6.56345" />
                    <Key frame="100" value="-7.27878" />
                    <Key frame="110" value="-6.56345" />
                    <Key frame="120" value="-7.27878" />
                    <Key frame="130" value="-6.56345" />
                    <Key frame="140" value="-7.27878" />
                    <Key frame="150" value="-6.56345" />
                    <Key frame="160" value="-7.27878" />
                    <Key frame="170" value="-6.56345" />
                    <Key frame="180" value="-7.27878" />
                    <Key frame="190" value="-6.56345" />
                    <Key frame="200" value="-7.27878" />
                    <Key frame="210" value="-6.56345" />
                    <Key frame="220" value="-7.27878" />
                    <Key frame="230" value="-6.56345" />
                    <Key frame="240" value="-7.27878" />
                    <Key frame="250" value="-6.56345" />
                    <Key frame="260" value="-7.27878" />
                    <Key frame="270" value="-6.56345" />
                    <Key frame="280" value="-7.27878" />
                    <Key frame="290" value="-6.56345" />
                    <Key frame="300" value="-7.27878" />
                    <Key frame="310" value="-6.56345" />
                    <Key frame="320" value="-7.27878" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="10" value="-16.2" />
                    <Key frame="20" value="-10.0384" />
                    <Key frame="30" value="-16.2" />
                    <Key frame="40" value="-10.0384" />
                    <Key frame="50" value="-16.2" />
                    <Key frame="60" value="-10.0384" />
                    <Key frame="70" value="-16.2" />
                    <Key frame="80" value="-10.0384" />
                    <Key frame="90" value="-16.2" />
                    <Key frame="100" value="-10.0384" />
                    <Key frame="110" value="-16.2" />
                    <Key frame="120" value="-10.0384" />
                    <Key frame="130" value="-16.2" />
                    <Key frame="140" value="-10.0384" />
                    <Key frame="150" value="-16.2" />
                    <Key frame="160" value="-10.0384" />
                    <Key frame="170" value="-16.2" />
                    <Key frame="180" value="-10.0384" />
                    <Key frame="190" value="-16.2" />
                    <Key frame="200" value="-10.0384" />
                    <Key frame="210" value="-16.2" />
                    <Key frame="220" value="-10.0384" />
                    <Key frame="230" value="-16.2" />
                    <Key frame="240" value="-10.0384" />
                    <Key frame="250" value="-16.2" />
                    <Key frame="260" value="-10.0384" />
                    <Key frame="270" value="-16.2" />
                    <Key frame="280" value="-10.0384" />
                    <Key frame="290" value="-16.2" />
                    <Key frame="300" value="-10.0384" />
                    <Key frame="310" value="-16.2" />
                    <Key frame="320" value="-10.0384" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="10" value="17.6" />
                    <Key frame="20" value="-5.16244" />
                    <Key frame="30" value="17.6" />
                    <Key frame="40" value="-5.16244" />
                    <Key frame="50" value="17.6" />
                    <Key frame="60" value="-5.16244" />
                    <Key frame="70" value="17.6" />
                    <Key frame="80" value="-5.16244" />
                    <Key frame="90" value="17.6" />
                    <Key frame="100" value="-5.16244" />
                    <Key frame="110" value="17.6" />
                    <Key frame="120" value="-5.16244" />
                    <Key frame="130" value="17.6" />
                    <Key frame="140" value="-5.16244" />
                    <Key frame="150" value="17.6" />
                    <Key frame="160" value="-5.16244" />
                    <Key frame="170" value="17.6" />
                    <Key frame="180" value="-5.16244" />
                    <Key frame="190" value="17.6" />
                    <Key frame="200" value="-5.16244" />
                    <Key frame="210" value="17.6" />
                    <Key frame="220" value="-5.16244" />
                    <Key frame="230" value="17.6" />
                    <Key frame="240" value="-5.16244" />
                    <Key frame="250" value="17.6" />
                    <Key frame="260" value="-5.16244" />
                    <Key frame="270" value="17.6" />
                    <Key frame="280" value="-5.16244" />
                    <Key frame="290" value="17.6" />
                    <Key frame="300" value="-5.16244" />
                    <Key frame="310" value="17.6" />
                    <Key frame="320" value="-5.16244" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="Run" id="10" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1674" y="668">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="10" start_frame="1" end_frame="140" size="140">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="LegsV2" id="1" localization="8" tooltip="" x="565" y="44">
                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="15" start_frame="1" end_frame="-1" size="210">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="10" value="4.9" />
                              <Key frame="210" value="4.9" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="10" value="-5.35316" />
                              <Key frame="210" value="-5.35316" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="10" value="-22" />
                              <Key frame="210" value="-22" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="10" value="4.59747" />
                              <Key frame="210" value="4.59747" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="10" value="-16.2" />
                              <Key frame="210" value="-16.2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="10" value="17.6" />
                              <Key frame="210" value="17.6" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="10" value="4.9" />
                              <Key frame="210" value="4.9" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="10" value="6.15042" />
                              <Key frame="210" value="6.15042" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="10" value="-22" />
                              <Key frame="210" value="-22" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="10" value="-6.56345" />
                              <Key frame="210" value="-6.56345" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="10" value="-16.2" />
                              <Key frame="210" value="-16.2" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="10" value="17.6" />
                              <Key frame="210" value="17.6" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="776" y="197">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="SayingDiscovery" id="2" localization="8" tooltip="" x="560" y="196">
                        <bitmap>media/images/box/box-python-script.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time
from naoqi import ALProxy

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True)

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "Ne pas courir et ne pas faire de gestes brusques dans l’aquarium. Lorsque vous parlez, exprimez-vous à voix basse."
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped()
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                      </Box>
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                      <Link inputowner="0" indexofinput="4" outputowner="6" indexofoutput="4" />
                      <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
                <ActuatorList model="nao">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="25" value="-10.0221" />
                    <Key frame="50" value="-10.0221" />
                    <Key frame="70" value="-10.0221" />
                    <Key frame="95" value="-10.0221" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                    <Key frame="25" value="-36.7" />
                    <Key frame="50" value="37.2" />
                    <Key frame="70" value="-36.7" />
                    <Key frame="95" value="37.2" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="25" value="-81.6" />
                    <Key frame="50" value="-79.4" />
                    <Key frame="70" value="-81.6" />
                    <Key frame="95" value="-79.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="25" value="-77.5" />
                    <Key frame="50" value="-77.5" />
                    <Key frame="70" value="-77.5" />
                    <Key frame="95" value="-77.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="25" value="1" />
                    <Key frame="50" value="1" />
                    <Key frame="70" value="1" />
                    <Key frame="95" value="1" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="25" value="119.5" />
                    <Key frame="50" value="-24.8" />
                    <Key frame="70" value="119.5" />
                    <Key frame="95" value="-24.8" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="25" value="9.4" />
                    <Key frame="50" value="9.4" />
                    <Key frame="70" value="9.4" />
                    <Key frame="95" value="9.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="25" value="-4.7" />
                    <Key frame="50" value="-4.7" />
                    <Key frame="70" value="-4.7" />
                    <Key frame="95" value="-4.7" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="25" value="81.6" />
                    <Key frame="50" value="79.4" />
                    <Key frame="70" value="81.6" />
                    <Key frame="95" value="79.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="25" value="77.5" />
                    <Key frame="50" value="77.5" />
                    <Key frame="70" value="77.5" />
                    <Key frame="95" value="77.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="25" value="1" />
                    <Key frame="50" value="1" />
                    <Key frame="70" value="1" />
                    <Key frame="95" value="1" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="25" value="-24.8" />
                    <Key frame="50" value="119.5" />
                    <Key frame="70" value="-24.8" />
                    <Key frame="95" value="119.5" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="25" value="-9.4" />
                    <Key frame="50" value="-9.4" />
                    <Key frame="70" value="-9.4" />
                    <Key frame="95" value="-9.4" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="25" value="4.7" />
                    <Key frame="50" value="4.7" />
                    <Key frame="70" value="4.7" />
                    <Key frame="95" value="4.7" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
            </Box>
            <Box name="Wait" id="34" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="160" y="480">
              <bitmap>media/images/box/wait.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
              <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
              <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
              <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
            </Box>
            <Link inputowner="7" indexofinput="2" outputowner="16" indexofoutput="3" />
            <Link inputowner="23" indexofinput="2" outputowner="25" indexofoutput="3" />
            <Link inputowner="16" indexofinput="2" outputowner="18" indexofoutput="3" />
            <Link inputowner="22" indexofinput="2" outputowner="21" indexofoutput="4" />
            <Link inputowner="6" indexofinput="2" outputowner="13" indexofoutput="4" />
            <Link inputowner="11" indexofinput="2" outputowner="6" indexofoutput="4" />
            <Link inputowner="8" indexofinput="2" outputowner="11" indexofoutput="4" />
            <Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="4" />
            <Link inputowner="31" indexofinput="2" outputowner="9" indexofoutput="4" />
            <Link inputowner="29" indexofinput="2" outputowner="1" indexofoutput="4" />
            <Link inputowner="14" indexofinput="2" outputowner="29" indexofoutput="4" />
            <Link inputowner="3" indexofinput="2" outputowner="14" indexofoutput="4" />
            <Link inputowner="17" indexofinput="2" outputowner="3" indexofoutput="4" />
            <Link inputowner="15" indexofinput="2" outputowner="19" indexofoutput="4" />
            <Link inputowner="21" indexofinput="2" outputowner="15" indexofoutput="4" />
            <Link inputowner="24" indexofinput="2" outputowner="22" indexofoutput="4" />
            <Link inputowner="26" indexofinput="2" outputowner="24" indexofoutput="4" />
            <Link inputowner="1" indexofinput="2" outputowner="41" indexofoutput="4" />
            <Link inputowner="41" indexofinput="2" outputowner="31" indexofoutput="4" />
            <Link inputowner="19" indexofinput="2" outputowner="10" indexofoutput="4" />
            <Link inputowner="13" indexofinput="2" outputowner="20" indexofoutput="3" />
            <Link inputowner="10" indexofinput="2" outputowner="17" indexofoutput="4" />
            <Link inputowner="0" indexofinput="4" outputowner="26" indexofoutput="4" />
            <Link inputowner="34" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="20" indexofinput="2" outputowner="34" indexofoutput="4" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
